{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"FinanceQuery <p>FinanceQuery is an open-source API for financial data that provides real-time quotes, market data, news, and technical indicators. It sources data from the unofficial Yahoo Finance API, web scraping, and other financial data providers.</p> <p>The key features are:</p> <ul> <li>Fast: Very high performance, on par with NodeJS and Go (thanks to FastAPI and Starlette). One of the fastest   Python frameworks available for financial data.</li> <li>Robust: Get production-ready code. With automatic interactive documentation.</li> <li>Standards-based: Based on (and fully compatible with) the open standards for APIs: OpenAPI and JSON Schema.</li> </ul> <p>Free &amp; Open Source</p> <p>FinanceQuery is completely free and open-source. No hidden fees, no rate limits on your own deployment. Built by developers, for developers.</p> <p>Production Ready</p> <p>Deploy to AWS Lambda, Render, or any cloud provider. Includes Docker support, automatic documentation, and comprehensive testing.</p> <p>Real-Time Data</p> <p>Get live stock quotes, market data, and financial news through WebSocket connections and REST APIs. Perfect for trading applications and financial dashboards.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>For requirements, installation instructions and quick start guide, see Getting Started.</p>"},{"location":"#interactive-api-documentation","title":"Interactive API Documentation","text":"<p>For a live interactive API documentation with demo requests, visit Scalar FinanceQuery.</p>"},{"location":"#example-usage","title":"Example Usage","text":"<p>A demo API is ready to use out of the box. Here's how to get stock data:</p>"},{"location":"#rest-api-example","title":"REST API Example","text":"<pre><code># Get detailed quote for NVIDIA stock\ncurl -X GET 'https://finance-query.onrender.com/v1/quotes?symbols=nvda' \\\n  -H 'x-api-key: your-api-key'\n</code></pre>"},{"location":"#response","title":"Response","text":"<pre><code>[\n  {\n    \"symbol\": \"NVDA\",\n    \"name\": \"NVIDIA Corporation\",\n    \"price\": \"120.15\",\n    \"change\": \"-11.13\",\n    \"percentChange\": \"-8.48%\",\n    \"marketCap\": \"2.94T\",\n    \"sector\": \"Technology\",\n    \"industry\": \"Semiconductors\"\n  }\n]\n</code></pre>"},{"location":"#websocket-real-time-updates","title":"WebSocket Real-Time Updates","text":"<pre><code>// Connect to WebSocket for real-time updates\nconst ws = new WebSocket('wss://finance-query.onrender.com/quotes');\n\nws.onopen = () =&gt; {\n    console.log('Connected to FinanceQuery WebSocket');\n    ws.send('TSLA'); // Subscribe to Tesla updates\n};\n\nws.onmessage = (event) =&gt; {\n    const data = JSON.parse(event.data);\n    console.log('Real-time update:', data);\n};\n</code></pre>"},{"location":"#what-you-get","title":"What You Get","text":"<p>In summary, you declare your financial data needs once, and FinanceQuery provides:</p> <ul> <li> <p>\u2705 Data validation:</p> <ul> <li>Automatic and clear errors when requests are invalid</li> <li>Validation for stock symbols, date ranges, and parameters</li> <li>Support for complex nested financial data structures</li> </ul> </li> <li> <p>\u2705 Multiple data sources:</p> <ul> <li>Yahoo Finance integration</li> <li>Web scraping for additional data points and fallbacks</li> <li>Real-time and historical data support</li> </ul> </li> <li> <p>\u2705 Performance optimizations:</p> <ul> <li>Cython-accelerated technical indicators</li> <li>Redis caching for frequently requested data</li> <li>Efficient data processing and serialization</li> </ul> </li> <li> <p>\u2705 Production features:</p> <ul> <li>Rate limiting and API key management</li> <li>Proxy support for reliable data fetching</li> <li>Docker containerization</li> <li>Cloud deployment ready (AWS Lambda, Render)</li> </ul> </li> </ul>"},{"location":"#available-rest-endpoints","title":"Available REST Endpoints","text":"Endpoint Description <code>/health</code>, <code>/ping</code> API status and health monitoring <code>/hours</code> Trading hours and market status <code>/v1/quotes</code> Detailed quotes and information <code>/v1/simple-quotes</code> Simplified quotes with summary information <code>/v1/similar</code> Find similar quotes to queried symbol <code>/v1/historical</code> Historical price data with customizable ranges <code>/v1/movers</code> Market gainers, losers, and most active stocks <code>/v1/news</code> Financial news and market updates <code>/v1/indices</code> Major market indices (S&amp;P 500, NASDAQ, DOW) <code>/v1/sectors</code> Market sector performance and analysis <code>/v1/search</code> Search for securities with filters <code>/v1/indicator</code> Get specific indicator history over time <code>/v1/indicators</code> Technical indicators summary for interval <code>/v1/stream</code> SSE for real-time quote updates"},{"location":"#available-websocket-endpoints","title":"Available WebSocket Endpoints","text":"Endpoint Description <code>/quotes</code> Real-time quotes updates <code>/profile</code> Real-time detailed ticker updates (quote, news, similar) <code>/market</code> Real-time market updates (indices, news, movers, sectors) <code>/hours</code> Real-time market hour updates"},{"location":"#deployment-options","title":"Deployment Options","text":"<p>Multiple Deployment Options</p> AWS LambdaRenderDocker <p>Perfect for serverless applications with automatic scaling: <pre><code># Use the provided AWS deployment workflow\n# Add AWS_SECRET_ID and AWS_SECRET_KEY to repository secrets\n</code></pre></p> <p>Easy deployment with WebSocket support: <pre><code># Deploy using the Render workflow\n# Add RENDER_DEPLOY_HOOK_URL to repository secrets\n</code></pre></p> <p>Deploy anywhere with Docker: <pre><code>docker build -t financequery .\ndocker run -p 8000:8000 financequery\n</code></pre></p>"},{"location":"#configuration","title":"Configuration","text":"<p>Customize FinanceQuery with environment variables:</p> <p>These environment variables are optional. The API will function with default settings if not provided.</p> <p>Security Configuration</p> <pre><code>USE_SECURITY=true\nADMIN_API_KEY=your-secret-admin-key\n</code></pre> <p>Proxy Configuration</p> <pre><code>USE_PROXY=true\nPROXY_URL=your-proxy-url\nPROXY_TOKEN=your-proxy-token\n</code></pre> <p>Redis Caching</p> <pre><code>REDIS_URL=redis://localhost:6379\n</code></pre> <p>Algolia Search</p> <pre><code>ALGOLIA_APP_ID=your-algolia-app-id\nALGOLIA_API_KEY=your-algolia-api-key\n</code></pre>"},{"location":"#performance","title":"Performance","text":"<p>FinanceQuery leverages:</p> <ul> <li>FastAPI for lightning-fast HTTP performance</li> <li>fastapi-injectable for efficient dependency injection</li> <li>curl_cffi for async browser curl impersonation</li> <li>lxml for fast and reliable web scraping</li> <li>Cython for accelerated technical indicator calculations</li> <li>Redis for intelligent caching of market data</li> <li>logo.dev for fetching stock logos</li> </ul>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the terms of the MIT License.</p>"},{"location":"#support-feedback","title":"Support &amp; Feedback","text":"<p>Need Help?</p> <ul> <li>\ud83d\udce7 Email: harveytseng2@gmail.com</li> <li>\ud83d\udc1b Issues: GitHub Issues</li> <li>\ud83d\udcd6 Documentation: OpenAPI Documentation</li> </ul> <p>As most data is scraped, some endpoints may break. If something is not working or if you have any suggestions, please reach out!</p>"},{"location":"deployment/","title":"Deployment Options","text":"<p>This document outlines various ways to deploy the FinanceQuery API service. This only covers Docker, AWS Lambda, and Render deployments, but the service can also be deployed on any platform that supports Python and FastAPI.</p>"},{"location":"deployment/#dependencies","title":"Dependencies","text":"<p>For the full list of dependencies, see <code>requirements.txt</code> in the project root.</p>"},{"location":"deployment/#docker-deployment","title":"Docker Deployment","text":"<p>Docker provides a straightforward way to self-host the FinanceQuery server. A Dockerfile is included in the repository that installs all dependencies and cythonizes project files for optimal performance.</p>"},{"location":"deployment/#build-the-docker-image","title":"Build the Docker Image","text":"<pre><code>docker build -t finance-query .\n</code></pre>"},{"location":"deployment/#run-the-docker-container","title":"Run the Docker Container","text":"<pre><code>docker run -p 8000:8000 finance-query\n</code></pre> <p>FinanceQuery will now be available on port 8000 at <code>http://localhost:8000</code>.</p>"},{"location":"deployment/#docker-with-logging-configuration","title":"Docker with Logging Configuration","text":"<p>Configure logging for different environments:</p> DevelopmentProductionRuntime Configuration <pre><code># Build and run with development logging\ndocker build \\\n  --build-arg LOG_LEVEL=DEBUG \\\n  --build-arg LOG_FORMAT=text \\\n  --build-arg PERFORMANCE_THRESHOLD_MS=500 \\\n  -t finance-query .\n\ndocker run -p 8000:8000 finance-query\n</code></pre> <pre><code># Build with production settings\ndocker build \\\n  --build-arg LOG_LEVEL=INFO \\\n  --build-arg LOG_FORMAT=json \\\n  --build-arg PERFORMANCE_THRESHOLD_MS=2000 \\\n  -t finance-query .\n\n# Run with additional production configuration\ndocker run -p 8000:8000 \\\n  -e REDIS_URL=redis://redis:6379 \\\n  -e USE_SECURITY=true \\\n  -e ADMIN_API_KEY=your-secure-key \\\n  finance-query\n</code></pre> <pre><code># Override logging settings at runtime\ndocker run -p 8000:8000 \\\n  -e LOG_LEVEL=WARNING \\\n  -e LOG_FORMAT=json \\\n  -e PERFORMANCE_THRESHOLD_MS=5000 \\\n  finance-query\n</code></pre>"},{"location":"deployment/#aws-lambda-deployment","title":"AWS Lambda Deployment","text":""},{"location":"deployment/#manual-deployment","title":"Manual Deployment","text":"<ol> <li>Follow the AWS Lambda Deployment Guide.</li> <li>Configure environment variables in the Lambda console:</li> </ol> <pre><code>LOG_LEVEL=INFO\nLOG_FORMAT=json\nPERFORMANCE_THRESHOLD_MS=3000\nREDIS_URL=your-redis-endpoint\nUSE_SECURITY=true\nADMIN_API_KEY=your-secure-admin-key\n</code></pre> <p>Note: Lambda has higher latency, so consider using <code>PERFORMANCE_THRESHOLD_MS=3000</code> or higher.</p>"},{"location":"deployment/#automated-deployment-workflow","title":"Automated Deployment Workflow","text":"<p>You can use the AWS Deployment Workflow from the repository:</p> <ol> <li>Provide repository secrets for:</li> <li><code>AWS_SECRET_ID</code></li> <li> <p><code>AWS_SECRET_KEY</code></p> </li> <li> <p>Edit the following values in the workflow file:</p> </li> <li><code>AWS_REGION</code></li> <li><code>ECR_REPOSITORY</code></li> <li><code>FUNCTION_NAME</code></li> </ol>"},{"location":"deployment/#render-deployment","title":"Render Deployment","text":""},{"location":"deployment/#manual-deployment_1","title":"Manual Deployment","text":"<ol> <li>Follow the Render Deployment Guide.</li> <li>The deployment should use the Dockerfile included in the repository.</li> <li> <p>Be sure to override the CMD in the Dockerfile in your Render project settings to:    <pre><code>python -m uvicorn src.main:app --host 0.0.0.0 --port $PORT\n</code></pre></p> </li> <li> <p>Configure environment variables in Render dashboard:</p> </li> </ol> <pre><code>LOG_LEVEL=INFO\nLOG_FORMAT=json\nPERFORMANCE_THRESHOLD_MS=2000\nREDIS_URL=your-redis-url\nUSE_SECURITY=true\nADMIN_API_KEY=your-secure-admin-key\n</code></pre>"},{"location":"deployment/#automated-deployment-workflow_1","title":"Automated Deployment Workflow","text":"<p>You can use the Render Deployment Workflow from the repository:</p> <ol> <li>Provide the repository secret:</li> <li> <p><code>RENDER_DEPLOY_HOOK_URL</code></p> </li> <li> <p>The deploy hook URL can be found in the settings of your Render project.</p> </li> </ol>"},{"location":"deployment/#monitoring-and-logging","title":"Monitoring and Logging","text":""},{"location":"deployment/#production-logging-best-practices","title":"Production Logging Best Practices","text":"<p>For production deployments, use these recommended logging settings:</p> <pre><code># Balanced logging for production\nLOG_LEVEL=INFO\nLOG_FORMAT=json\nPERFORMANCE_THRESHOLD_MS=2000\n</code></pre>"},{"location":"deployment/#log-monitoring","title":"Log Monitoring","text":""},{"location":"deployment/#cloudwatch-aws-lambda","title":"CloudWatch (AWS Lambda)","text":"<p>AWS Lambda automatically sends logs to CloudWatch. View logs in the AWS Console:</p> <pre><code># View recent logs\naws logs tail /aws/lambda/your-function-name --follow\n\n# Filter for errors\naws logs filter-log-events --log-group-name /aws/lambda/your-function-name \\\n  --filter-pattern \"ERROR\"\n</code></pre>"},{"location":"deployment/#docker-logging","title":"Docker Logging","text":"<p>For Docker deployments, configure log drivers:</p> <pre><code># Using JSON file driver with rotation\ndocker run -p 8000:8000 \\\n  --log-driver json-file \\\n  --log-opt max-size=10m \\\n  --log-opt max-file=3 \\\n  finance-query\n\n# View logs\ndocker logs -f container-name\n</code></pre>"},{"location":"deployment/#render-logging","title":"Render Logging","text":"<p>Render provides built-in log streaming in the dashboard. You can also access logs via CLI:</p> <pre><code># Install Render CLI\nnpm install -g @render-services/cli\n\n# View logs\nrender logs --service your-service-name --tail\n</code></pre>"},{"location":"deployment/#troubleshooting","title":"Troubleshooting","text":""},{"location":"deployment/#common-issues","title":"Common Issues","text":"<p>High CPU/Memory Usage: - Set <code>LOG_LEVEL=WARNING</code> to reduce log volume - Increase <code>PERFORMANCE_THRESHOLD_MS</code> to reduce warnings</p> <p>Missing Performance Data: - Ensure <code>LOG_FORMAT=json</code> for structured data - Lower <code>PERFORMANCE_THRESHOLD_MS</code> for more monitoring</p> <p>External API Issues: - Monitor logs for \"External API FAILED\" messages - Check correlation IDs to trace failed requests</p> <p>For detailed logging configuration and troubleshooting, see the Logging Documentation.</p>"},{"location":"getting-started/","title":"Getting Started with FinanceQuery","text":"<p>This guide will help you set up and run FinanceQuery on your system.</p>"},{"location":"getting-started/#requirements","title":"Requirements","text":"<p>Before getting started with FinanceQuery, ensure your system meets the following requirements:</p>"},{"location":"getting-started/#system-requirements","title":"System Requirements","text":"<ul> <li>Python: 3.11 or higher (Python 3.12 recommended)</li> <li>Operating System: Linux, macOS, or Windows</li> <li>Memory: Minimum 512MB RAM (1GB+ recommended for production)</li> </ul> <p>FinanceQuery requires several system-level dependencies for optimal performance:</p> Linux (Ubuntu/Debian)macOSWindows <pre><code>sudo apt-get update &amp;&amp; sudo apt-get install -y \\\n    ca-certificates \\\n    libkrb5-dev \\\n    libicu-dev \\\n    zlib1g-dev \\\n    openssl \\\n    gcc \\\n    python3-dev\n</code></pre> <pre><code># Using Homebrew\nbrew install openssl krb5 icu4c\n</code></pre> <pre><code># Required components\n- Visual Studio Build Tools or Visual Studio Community (for C++ compilation)\n- OpenSSL (typically included with Python installation)\n</code></pre>"},{"location":"getting-started/#dependency-management","title":"Dependency Management","text":"<p>FinanceQuery uses Poetry for dependency management. A <code>requirements.txt</code> file is also provided for environments where Poetry isn't available.</p> <pre><code># Using Poetry (recommended)\npoetry install\n\n# Using pip\npip install -r requirements.txt\n</code></pre>"},{"location":"getting-started/#optional-requirements","title":"Optional Requirements","text":""},{"location":"getting-started/#redis-recommended-for-production","title":"Redis (Recommended for Production)","text":"<ul> <li>Redis server for caching and improved performance</li> <li>Installation: Redis Quick Start Guide</li> </ul>"},{"location":"getting-started/#proxy-support-optional","title":"Proxy Support (Optional)","text":"<ul> <li>For enhanced data fetching reliability in production environments</li> <li>Configure via environment variables (see Configuration section)</li> </ul>"},{"location":"getting-started/#quick-start","title":"Quick Start","text":""},{"location":"getting-started/#installation","title":"Installation","text":"<p>Create and activate a virtual environment and then install the dependencies:</p> <pre><code># Clone the project\ngit clone https://github.com/Verdenroz/finance-query.git\ncd finance-query\n\n# Install dependencies\npoetry install\n\n# Cythonize files for performance\npython setup.py build_ext --inplace\n\n# Start the server\nuvicorn src.main:app --reload\n</code></pre>"},{"location":"getting-started/#testing-the-api","title":"Testing the API","text":"<p>Once the server is running, you can access:</p> <ul> <li>API Documentation: http://localhost:8000/docs</li> <li>Alternative Documentation: http://localhost:8000/redoc</li> </ul>"},{"location":"getting-started/#making-your-first-request","title":"Making Your First Request","text":"<p>Try getting stock information using curl:</p> <pre><code>curl -X GET \"http://localhost:8000/v1/simple-quotes?symbols=AAPL\"\n</code></pre> <p>Or using Python:</p> <pre><code>import requests\n\nresponse = requests.get(\"http://localhost:8000/v1/simple-quotes\", params={\"symbols\": \"AAPL\"})\nprint(response.json())\n</code></pre>"},{"location":"getting-started/#configuration","title":"Configuration","text":""},{"location":"getting-started/#environment-variables","title":"Environment Variables","text":"<p>FinanceQuery can be configured using environment variables. Copy the template and customize as needed:</p> <pre><code># Copy the environment template\ncp .env.template .env\n\n# Edit configuration\nnano .env\n</code></pre>"},{"location":"getting-started/#basic-configuration","title":"Basic Configuration","text":"<p>For a quick start, the following minimal configuration is sufficient:</p> <pre><code># Optional: Enable Redis caching for better performance\nREDIS_URL=redis://localhost:6379\n\n# Optional: Configure logging\nLOG_LEVEL=INFO\nLOG_FORMAT=text\n</code></pre>"},{"location":"getting-started/#logging-setup","title":"Logging Setup","text":"<p>Configure logging based on your environment:</p> DevelopmentProduction <pre><code>LOG_LEVEL=DEBUG\nLOG_FORMAT=text\nPERFORMANCE_THRESHOLD_MS=500\n</code></pre> <p>This provides: - Detailed diagnostic information - Human-readable log format - Strict performance monitoring</p> <pre><code>LOG_LEVEL=INFO\nLOG_FORMAT=json\nPERFORMANCE_THRESHOLD_MS=2000\n</code></pre> <p>This provides: - Balanced log volume - Structured JSON output for monitoring tools - Reasonable performance threshold</p>"},{"location":"getting-started/#verifying-configuration","title":"Verifying Configuration","text":"<p>After starting the server, you should see log output indicating your configuration:</p> <pre><code># With DEBUG level\n2025-01-15 14:30:20 - main - INFO - [system] - Application startup completed\n2025-01-15 14:30:20 - main - DEBUG - [system] - Logging configured: DEBUG level, text format\n</code></pre> <p>For more detailed logging configuration options, see the Logging Documentation.</p>"},{"location":"logging/","title":"Logging Configuration","text":"<p>FinanceQuery includes a comprehensive logging system designed for both development and production environments. The logging system provides structured output, performance monitoring, request tracing, and external API tracking.</p>"},{"location":"logging/#overview","title":"Overview","text":"<p>The logging system features:</p> <ul> <li>Configurable log levels (DEBUG, INFO, WARNING, ERROR, CRITICAL)</li> <li>Multiple output formats (JSON for production, text for development)  </li> <li>Performance monitoring with configurable thresholds</li> <li>Request correlation IDs for distributed tracing</li> <li>External API tracking with timing and success metrics</li> <li>Cache operation logging for performance optimization</li> <li>Automatic middleware for HTTP request/response logging with route-specific tracking</li> <li>Response correlation headers (<code>X-Correlation-ID</code>) for client tracing</li> </ul>"},{"location":"logging/#environment-variables","title":"Environment Variables","text":""},{"location":"logging/#log_level","title":"LOG_LEVEL","text":"<p>Controls the verbosity of log output.</p> <pre><code>LOG_LEVEL=INFO\n</code></pre> <p>Available Options:</p> Level Description Use Case <code>DEBUG</code> Detailed diagnostic information Development, troubleshooting <code>INFO</code> General operational messages Production (default) <code>WARNING</code> Warning messages and slow operations Production monitoring <code>ERROR</code> Error conditions Always enabled <code>CRITICAL</code> System failures requiring immediate attention Always enabled"},{"location":"logging/#log_format","title":"LOG_FORMAT","text":"<p>Determines the output format of log messages.</p> <pre><code>LOG_FORMAT=json\n</code></pre> <p>Available Options:</p> JSON Format (<code>json</code>)Text Format (<code>text</code>) <pre><code>{\n  \"asctime\": \"2025-01-15 14:30:22\",\n  \"level\": \"INFO\",\n  \"logger\": \"src.routes.quotes\",\n  \"module\": \"quotes\",\n  \"correlation_id\": \"a1b2c3d4\",\n  \"message\": \"Processing quotes request\",\n  \"route\": \"quotes\",\n  \"params\": {\"symbols\": [\"AAPL\", \"TSLA\"]}\n}\n</code></pre> <p>Benefits:</p> <ul> <li>Structured data for log analysis tools</li> <li>Easy parsing by monitoring systems</li> <li>Consistent field extraction</li> <li>Machine-readable format</li> </ul> <pre><code>2025-01-15 14:30:22 - src.routes.quotes - INFO - [a1b2c3d4] - Processing quotes request\n</code></pre> <p>Benefits:</p> <ul> <li>Human-readable format</li> <li>Easier debugging during development</li> <li>Familiar log format</li> <li>Compact output</li> </ul>"},{"location":"logging/#performance_threshold_ms","title":"PERFORMANCE_THRESHOLD_MS","text":"<p>Sets the threshold (in milliseconds) for slow operation warnings.</p> <pre><code>PERFORMANCE_THRESHOLD_MS=2000\n</code></pre> <p>Recommended Values:</p> Environment Threshold Reasoning Development <code>500ms</code> Strict performance monitoring for optimization Staging <code>1000ms</code> Moderate monitoring for pre-production testing Production <code>2000ms</code> Balanced monitoring (default) High-Load <code>5000ms</code> Relaxed monitoring for systems under heavy load"},{"location":"logging/#logging-features","title":"Logging Features","text":""},{"location":"logging/#request-correlation-ids","title":"Request Correlation IDs","text":"<p>Every request gets a unique correlation ID for tracing across the entire request lifecycle:</p> <pre><code>2025-01-15 14:30:22 - src.middleware.logging_middleware - INFO - [a1b2c3d4] - API request received\n2025-01-15 14:30:22 - src.middleware.logging_middleware - INFO - [a1b2c3d4] - Processing quotes request  \n2025-01-15 14:30:22 - src.clients.yahoo_client - INFO - [a1b2c3d4] - External API SUCCESS - Yahoo Finance quote (234.1ms)\n2025-01-15 14:30:22 - src.middleware.logging_middleware - INFO - [a1b2c3d4] - quotes request completed successfully\n2025-01-15 14:30:22 - src.middleware.logging_middleware - INFO - [a1b2c3d4] - API response sent - GET /quotes (200) [347.8ms]\n</code></pre> <p>The correlation ID is also added to HTTP response headers as <code>X-Correlation-ID</code>, allowing clients to correlate their requests with server logs.</p>"},{"location":"logging/#automatic-route-logging","title":"Automatic Route Logging","text":"<p>The <code>LoggingMiddleware</code> automatically handles logging for API routes without requiring manual logging calls in route handlers:</p> <ul> <li>General HTTP logging: All requests/responses with timing and status codes</li> <li>Route-specific logging: Enhanced logging for <code>/v1/</code> API endpoints with route names and parameters</li> <li>Error handling: Automatic error logging with stack traces and context</li> <li>Performance tracking: Slow operation warnings based on configurable thresholds</li> </ul> <p>Route handlers are kept clean and focused on business logic, while the middleware handles all logging concerns centrally.</p>"},{"location":"logging/#performance-monitoring","title":"Performance Monitoring","text":"<p>Automatic performance logging for all HTTP requests:</p> <pre><code># Fast operation (DEBUG level)\nOperation completed - GET /quotes (347.8ms)\n\n# Slow operation (WARNING level) \nSlow operation detected - GET /historical (2134.7ms)\n</code></pre>"},{"location":"logging/#external-api-tracking","title":"External API Tracking","text":"<p>Monitor all external service calls with timing and success metrics:</p> <pre><code>External API SUCCESS - Yahoo Finance quote (234.1ms)\nExternal API SUCCESS - Algolia search (89.3ms)\nExternal API FAILED - Logo.dev ticker (5002.4ms)\n</code></pre>"},{"location":"logging/#cache-operations","title":"Cache Operations","text":"<p>Track cache performance for optimization:</p> <pre><code>Cache HIT - Data retrieved from cache\nCache MISS - Data not found in cache  \nCache SET - Data stored in cache\n</code></pre>"},{"location":"logging/#configuration-examples","title":"Configuration Examples","text":""},{"location":"logging/#development-setup","title":"Development Setup","text":"<pre><code>LOG_LEVEL=DEBUG\nLOG_FORMAT=text\nPERFORMANCE_THRESHOLD_MS=500\n</code></pre> <p>Output: <pre><code>2025-01-15 14:30:22 - src.routes.quotes - DEBUG - [a1b2c3d4] - Operation completed - GET /quotes (123.4ms)\n2025-01-15 14:30:22 - src.utils.cache - DEBUG - [a1b2c3d4] - Cache HIT - Data retrieved from cache\n</code></pre></p>"},{"location":"logging/#production-setup","title":"Production Setup","text":"<pre><code>LOG_LEVEL=INFO\nLOG_FORMAT=json\nPERFORMANCE_THRESHOLD_MS=2000\n</code></pre> <p>Output: <pre><code>{\n  \"asctime\": \"2025-01-15 14:30:22\",\n  \"level\": \"INFO\", \n  \"logger\": \"src.middleware.logging_middleware\",\n  \"correlation_id\": \"a1b2c3d4\",\n  \"message\": \"API response sent - GET /quotes (200) [347.8ms]\",\n  \"method\": \"GET\",\n  \"path\": \"/quotes\",\n  \"status_code\": 200,\n  \"duration_ms\": 347.8,\n  \"api_response\": true\n}\n</code></pre></p>"},{"location":"logging/#docker-configuration","title":"Docker Configuration","text":"Build TimeRuntime <pre><code>docker build \\\n  --build-arg LOG_LEVEL=INFO \\\n  --build-arg LOG_FORMAT=json \\\n  --build-arg PERFORMANCE_THRESHOLD_MS=2000 \\\n  -t financequery .\n</code></pre> <pre><code>docker run \\\n  -e LOG_LEVEL=WARNING \\\n  -e LOG_FORMAT=json \\\n  -e PERFORMANCE_THRESHOLD_MS=5000 \\\n  financequery\n</code></pre>"},{"location":"logging/#monitoring-integration","title":"Monitoring Integration","text":""},{"location":"logging/#elk-stack-elasticsearch-logstash-kibana","title":"ELK Stack (Elasticsearch, Logstash, Kibana)","text":"<p>With <code>LOG_FORMAT=json</code>, logs can be easily ingested by Logstash:</p> <pre><code># logstash.conf\ninput {\n  docker {\n    type =&gt; \"financequery\"\n  }\n}\n\nfilter {\n  if [type] == \"financequery\" {\n    json {\n      source =&gt; \"message\"\n    }\n  }\n}\n\noutput {\n  elasticsearch {\n    hosts =&gt; [\"elasticsearch:9200\"]\n  }\n}\n</code></pre>"},{"location":"logging/#prometheus-integration","title":"Prometheus Integration","text":"<p>Create custom metrics from structured logs:</p> <pre><code># prometheus.yml\n- job_name: 'financequery-logs'\n  static_configs:\n    - targets: ['financequery:8000']\n  metrics_path: '/metrics'\n</code></pre>"},{"location":"logging/#cloudwatch-logs","title":"CloudWatch Logs","text":"<p>For AWS deployments, structured JSON logs integrate seamlessly:</p> <pre><code>{\n  \"logGroup\": \"/aws/lambda/financequery\",\n  \"logStream\": \"2025/01/15/[$LATEST]abc123\",\n  \"timestamp\": 1642263022000,\n  \"message\": \"{\\\"level\\\":\\\"INFO\\\",\\\"correlation_id\\\":\\\"a1b2c3d4\\\",\\\"duration_ms\\\":347.8}\"\n}\n</code></pre>"},{"location":"logging/#troubleshooting","title":"Troubleshooting","text":""},{"location":"logging/#common-issues","title":"Common Issues","text":""},{"location":"logging/#high-log-volume","title":"High Log Volume","text":"<p>Problem: Too many DEBUG logs in production. Solution: Set <code>LOG_LEVEL=INFO</code> or higher.</p> <pre><code>LOG_LEVEL=INFO  # Reduces log volume\n</code></pre>"},{"location":"logging/#missing-performance-warnings","title":"Missing Performance Warnings","text":"<p>Problem: Not seeing slow operation warnings. Solution: Lower the performance threshold.</p> <pre><code>PERFORMANCE_THRESHOLD_MS=1000  # More sensitive monitoring\n</code></pre>"},{"location":"logging/#parsing-issues-with-log-aggregators","title":"Parsing Issues with Log Aggregators","text":"<p>Problem: Logs not parsing correctly in monitoring systems. Solution: Ensure JSON format is enabled.</p> <pre><code>LOG_FORMAT=json  # Structured output\n</code></pre>"},{"location":"logging/#log-filtering","title":"Log Filtering","text":""},{"location":"logging/#view-only-errors","title":"View Only Errors","text":"<pre><code># Text format\ngrep \"ERROR\\|CRITICAL\" app.log\n\n# JSON format  \njq 'select(.level == \"ERROR\" or .level == \"CRITICAL\")' app.log\n</code></pre>"},{"location":"logging/#monitor-performance-issues","title":"Monitor Performance Issues","text":"<pre><code># Text format\ngrep \"Slow operation detected\" app.log\n\n# JSON format\njq 'select(.message | contains(\"Slow operation\"))' app.log\n</code></pre>"},{"location":"logging/#track-external-api-issues","title":"Track External API Issues","text":"<pre><code># Text format  \ngrep \"External API FAILED\" app.log\n\n# JSON format\njq 'select(.message | contains(\"External API FAILED\"))' app.log\n</code></pre>"},{"location":"logging/#best-practices","title":"Best Practices","text":""},{"location":"logging/#development","title":"Development","text":"<ul> <li>Use <code>LOG_LEVEL=DEBUG</code> for detailed diagnostics</li> <li>Use <code>LOG_FORMAT=text</code> for human-readable output</li> <li>Set low <code>PERFORMANCE_THRESHOLD_MS=500</code> for optimization</li> </ul>"},{"location":"logging/#production","title":"Production","text":"<ul> <li>Use <code>LOG_LEVEL=INFO</code> to balance detail and volume</li> <li>Use <code>LOG_FORMAT=json</code> for structured monitoring</li> <li>Set appropriate <code>PERFORMANCE_THRESHOLD_MS</code> based on expected load</li> <li>Monitor correlation IDs for request tracing</li> <li>Set up log rotation to prevent disk space issues</li> </ul>"},{"location":"logging/#monitoring","title":"Monitoring","text":"<ul> <li>Create alerts on ERROR and CRITICAL log levels</li> <li>Monitor slow operation trends</li> <li>Track external API failure rates</li> <li>Set up dashboards for performance metrics</li> <li>Use correlation IDs for distributed tracing</li> </ul>"},{"location":"logging/#log-rotation","title":"Log Rotation","text":"<p>For production deployments, configure log rotation to manage disk space:</p> <pre><code># logrotate configuration\n/var/log/financequery/*.log {\n    daily\n    rotate 30\n    compress\n    delaycompress\n    missingok\n    notifempty\n    create 644 financequery financequery\n}\n</code></pre>"},{"location":"websockets/","title":"WebSockets","text":"<p>Finance Query provides real-time financial data through WebSocket connections. All WebSocket endpoints automatically refresh data every 5 seconds and support both individual connections and Redis-based pub/sub scaling.</p>"},{"location":"websockets/#available-websocket-routes","title":"Available WebSocket Routes","text":"<p>Finance Query currently implements four WebSocket endpoints:</p> <ul> <li>Profile - Stream comprehensive data for a single symbol including quotes, similar stocks, sector performance, and news</li> <li>Quotes - Stream simple quote data for multiple symbols simultaneously  </li> <li>Market - Stream market overview including movers, indices, news, and sector performances</li> <li>Hours - Stream current market status (open, closed, pre-market, after-hours)</li> </ul>"},{"location":"websockets/#connection-requirements","title":"Connection Requirements","text":""},{"location":"websockets/#authentication","title":"Authentication","text":"<p>All WebSocket connections require validation if the <code>USE_SECURITY</code> environment variable is set to <code>True</code>. This ensures that only authenticated users can access the data streams.</p>"},{"location":"websockets/#url-format","title":"URL Format","text":"<p>WebSocket URLs follow this pattern:</p> <ul> <li>Production/HTTPS: <code>wss://your-domain.com/{endpoint}</code></li> <li>Local Development: <code>ws://localhost:8000/{endpoint}</code></li> </ul>"},{"location":"websockets/#deployment-considerations","title":"Deployment Considerations","text":""},{"location":"websockets/#aws-lambda-limitations","title":"AWS Lambda Limitations","text":"<p>WebSockets are not supported when deploying Finance Query to AWS Lambda due to Lambda's stateless nature and lack of persistent connections.</p>"},{"location":"websockets/#recommended-deployment","title":"Recommended Deployment","text":"<p>For full WebSocket functionality, deploy to platforms that support persistent connections:</p> <ul> <li>Render (recommended)</li> <li>Railway</li> <li>Fly.io</li> <li>DigitalOcean App Platform</li> <li>Traditional VPS/servers</li> </ul>"},{"location":"websockets/#connection-management","title":"Connection Management","text":""},{"location":"websockets/#redis-scaling","title":"Redis Scaling","text":"<p>Finance Query supports Redis-based connection management for horizontal scaling:</p> <ul> <li>Multiple server instances can share WebSocket state</li> <li>Pub/sub mechanism ensures all connected clients receive updates</li> <li>Automatic fallback to in-memory management if Redis is unavailable</li> </ul>"},{"location":"websockets/#connection-lifecycle","title":"Connection Lifecycle","text":"<ol> <li>Validation - Each connection is validated before acceptance (if <code>USE_SECURITY</code> is <code>True</code>)</li> <li>Initial Data - Immediate data fetch and send upon connection</li> <li>Periodic Updates - Data refreshed every 5 seconds</li> <li>Graceful Disconnection - Proper cleanup on client disconnect</li> </ol>"},{"location":"websockets/#error-handling","title":"Error Handling","text":"<ul> <li>Invalid authentication results in connection rejection</li> <li>Failed data fetches don't terminate the connection</li> <li>Default null values provided for failed operations</li> </ul>"},{"location":"websockets/#connection-management_1","title":"Connection Management","text":""},{"location":"websockets/#channel-naming","title":"Channel Naming","text":"<ul> <li>Connection Pooling: Multiple clients may share data channel</li> <li>Redis Support: Horizontal scaling via Redis pub/sub</li> </ul>"},{"location":"websockets/#connection-sharing","title":"Connection Sharing","text":"<ul> <li>Reduces server load for popular symbol combinations</li> <li>Redis pub/sub enables scaling across multiple server instances</li> </ul>"},{"location":"websockets/#getting-started","title":"Getting Started","text":"<ol> <li>Choose your endpoint based on data requirements</li> <li>Establish connection using appropriate URL format</li> <li>Handle initial data sent immediately upon connection</li> <li>Process periodic updates sent every 5 seconds</li> <li>Implement reconnection logic for production applications</li> </ol> <p>For detailed usage examples and response formats, see the individual endpoint documentation pages.</p>"},{"location":"api/earnings_transcript/","title":"Earnings Transcript","text":""},{"location":"api/earnings_transcript/#get-v1earnings-transcriptsymbol","title":"GET /v1/earnings-transcript/{symbol}","text":""},{"location":"api/earnings_transcript/#overview","title":"Overview","text":"<p>Purpose: Retrieve earnings call transcripts for a given stock symbol. Response Format: A transcript data object containing the transcript content and metadata.</p>"},{"location":"api/earnings_transcript/#authentication","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p>"},{"location":"api/earnings_transcript/#path-parameters","title":"Path Parameters","text":"Parameter Type Required Description Example <code>symbol</code> string \u2713 The stock ticker symbol <code>AAPL</code>"},{"location":"api/earnings_transcript/#query-parameters","title":"Query Parameters","text":"Parameter Type Required Description Example <code>quarter</code> string Specific quarter filter (Q1, Q2, Q3, Q4) <code>Q3</code> <code>year</code> integer Specific year filter <code>2024</code>"},{"location":"api/earnings_transcript/#responses","title":"Responses","text":"<ul> <li>200 OK</li> <li>Content-Type: <code>application/json</code></li> <li>Schema: <code>EarningsTranscript</code></li> <li> <p>Example (200): <pre><code>{\n  \"symbol\": \"AAPL\",\n  \"transcripts\": [\n    {\n      \"symbol\": \"AAPL\",\n      \"quarter\": \"Q3\",\n      \"year\": 2024,\n      \"date\": \"2024-10-15T00:00:00\",\n      \"transcript\": \"AAPL Q3 2024 Earnings Call Transcript\\n\\nCORPORATE PARTICIPANTS:\\n- CEO: Thank you for joining us today...\",\n      \"participants\": [\n        \"CEO - Chief Executive Officer\",\n        \"CFO - Chief Financial Officer\",\n        \"Analyst 1 - Investment Research\"\n      ],\n      \"metadata\": {\n        \"source\": \"defeatbeta-api\",\n        \"retrieved_at\": \"2024-10-15T12:00:00\",\n        \"transcripts_id\": 12345\n      }\n    }\n  ]\n}\n</code></pre></p> </li> <li> <p>404 Not Found <pre><code>{ \"detail\": \"No earnings transcripts found for symbol INVALID\" }\n</code></pre></p> </li> <li> <p>422 Unprocessable Entity <pre><code>{\n  \"errors\": {\n    \"quarter\": [\n      \"Invalid quarter format. Use Q1, Q2, Q3, or Q4\"\n    ]\n  }\n}\n</code></pre></p> </li> </ul>"},{"location":"api/earnings_transcript/#schema-references","title":"Schema References","text":""},{"location":"api/earnings_transcript/#earningstranscript-schema","title":"EarningsTranscript Schema","text":"Field Type Description Required symbol string Stock symbol (e.g., \"AAPL\") \u2713 transcripts TranscriptItem[] List of transcript objects \u2713"},{"location":"api/earnings_transcript/#transcriptitem","title":"TranscriptItem","text":"Field Type Description Required symbol string Stock symbol \u2713 quarter string Quarter (e.g., \"Q3\") \u2713 year integer Year (e.g., 2024) \u2713 date datetime Date of the earnings call \u2713 transcript string Full transcript text content \u2713 participants string[] List of call participants \u2713 metadata object Additional transcript metadata \u2713"},{"location":"api/earnings_transcript/#usage-examples","title":"Usage Examples","text":""},{"location":"api/earnings_transcript/#get-latest-earnings-transcript","title":"Get Latest Earnings Transcript","text":"<pre><code>curl -X GET \"https://finance-query.onrender.com/v1/earnings-transcript/AAPL\" \\\n     -H \"x-api-key: YOUR_API_KEY\"\n</code></pre>"},{"location":"api/earnings_transcript/#get-specific-quarter-and-year","title":"Get Specific Quarter and Year","text":"<pre><code>curl -X GET \"https://finance-query.onrender.com/v1/earnings-transcript/TSLA?quarter=Q3&amp;year=2024\" \\\n     -H \"x-api-key: YOUR_API_KEY\"\n</code></pre>"},{"location":"api/earnings_transcript/#filter-by-year-only","title":"Filter by Year Only","text":"<pre><code>curl -X GET \"https://finance-query.onrender.com/v1/earnings-transcript/MSFT?year=2023\" \\\n     -H \"x-api-key: YOUR_API_KEY\"\n</code></pre>"},{"location":"api/financials/","title":"Financials","text":""},{"location":"api/financials/#get-v1financialssymbol","title":"GET /v1/financials/{symbol}","text":""},{"location":"api/financials/#overview","title":"Overview","text":"<p>Purpose: Retrieve financial statements for a given stock symbol. Response Format: A financial statement object containing the data for the requested type and frequency.</p>"},{"location":"api/financials/#authentication","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p>"},{"location":"api/financials/#path-parameters","title":"Path Parameters","text":"Parameter Type Required Description Example <code>symbol</code> string \u2713 The stock ticker symbol <code>AAPL</code>"},{"location":"api/financials/#query-parameters","title":"Query Parameters","text":"Parameter Type Required Description Example <code>statement</code> StatementType \u2713 The type of statement (<code>income</code>, <code>balance</code>, <code>cashflow</code>) <code>income</code> <code>frequency</code> Frequency The frequency of the report (<code>annual</code>, <code>quarterly</code>). Defaults to <code>annual</code>. <code>annual</code>"},{"location":"api/financials/#responses","title":"Responses","text":"<ul> <li>200 OK </li> <li>Content-Type: <code>application/json</code> </li> <li>Schema: <code>FinancialStatement</code></li> <li> <p>Example (200): <pre><code>{\n  \"symbol\": \"AAPL\",\n  \"statement_type\": \"income\",\n  \"frequency\": \"annual\",\n  \"statement\": {\n    \"2023-09-30\": {\n      \"Total Revenue\": 383285000000,\n      \"Operating Revenue\": 383285000000,\n      \"Cost Of Revenue\": 214137000000,\n      \"Gross Profit\": 169148000000,\n      \"Operating Expense\": 54847000000,\n      \"Operating Income\": 114301000000,\n      \"Net Income\": 96995000000\n    },\n    \"2022-09-30\": {\n      \"Total Revenue\": 394328000000,\n      \"Operating Revenue\": 394328000000,\n      \"Cost Of Revenue\": 223546000000,\n      \"Gross Profit\": 170782000000,\n      \"Operating Expense\": 51345000000,\n      \"Operating Income\": 119437000000,\n      \"Net Income\": 99803000000\n    }\n  }\n}\n</code></pre></p> </li> <li> <p>404 Not Found <pre><code>{ \"detail\": \"No data found for SYMBOL\" }\n</code></pre></p> </li> <li> <p>422 Unprocessable Entity <pre><code>{\n  \"errors\": {\n      \"statement\": [\n          \"Input should be 'income', 'balance' or 'cashflow'\"\n      ]\n  }\n}\n</code></pre></p> </li> </ul>"},{"location":"api/financials/#schema-references","title":"Schema References","text":""},{"location":"api/financials/#financialstatement-schema","title":"FinancialStatement Schema","text":"Field Type Description Required symbol string Stock symbol (e.g., \"AAPL\") \u2713 statement_type StatementType Type of financial statement \u2713 frequency Frequency Frequency of the financial statement \u2713 statement object Financial statement data, with metrics as keys and a dictionary of dates and values \u2713"},{"location":"api/financials/#statementtype","title":"StatementType","text":"<p>An <code>Enum</code> with the following possible string values: - <code>income</code> - <code>balance</code> - <code>cashflow</code></p>"},{"location":"api/financials/#frequency","title":"Frequency","text":"<p>An <code>Enum</code> with the following possible string values: - <code>annual</code> - <code>quarterly</code></p>"},{"location":"api/health/","title":"Health Endpoints","text":""},{"location":"api/health/#get-v1health","title":"GET /v1/health","text":""},{"location":"api/health/#overview","title":"Overview","text":"<p>Purpose: Detailed health check of the API and its dependencies Response Format: JSON object with service statuses and metrics</p>"},{"location":"api/health/#authentication","title":"Authentication","text":"<p>None required</p> <p>Responses:</p> <ul> <li>200 OK<ul> <li>Content-Type: <code>application/json</code></li> <li>Example (200): <pre><code>{\n  \"status\": \"healthy\",\n  \"timestamp\": \"2025-05-13T19:35:38.383240\",\n  \"redis\": {\n      \"status\": \"healthy\",\n      \"latency_ms\": 18.45\n  },\n  \"services\": {\n      \"status\": \"20/20 succeeded\",\n      \"Indices\": {\n          \"status\": \"succeeded\"\n      },\n      \"Market Actives\": {\n          \"status\": \"succeeded\"\n      },\n      \"Market Losers\": {\n          \"status\": \"succeeded\"\n      },\n      \"Market Gainers\": {\n          \"status\": \"succeeded\"\n      },\n      \"Market Sectors\": {\n          \"status\": \"succeeded\"\n      },\n      \"Sector for a symbol\": {\n          \"status\": \"succeeded\"\n      },\n      \"Detailed Sector\": {\n          \"status\": \"succeeded\"\n      },\n      \"General News\": {\n          \"status\": \"succeeded\"\n      },\n      \"News for equity\": {\n          \"status\": \"succeeded\"\n      },\n      \"News for ETF\": {\n          \"status\": \"succeeded\"\n      },\n      \"Full Quotes\": {\n          \"status\": \"succeeded\"\n      },\n      \"Simple Quotes\": {\n          \"status\": \"succeeded\"\n      },\n      \"Similar Equities\": {\n          \"status\": \"succeeded\"\n      },\n      \"Similar ETFs\": {\n          \"status\": \"succeeded\"\n      },\n      \"Historical day prices\": {\n          \"status\": \"succeeded\"\n      },\n      \"Historical month prices\": {\n          \"status\": \"succeeded\"\n      },\n      \"Historical year prices\": {\n          \"status\": \"succeeded\"\n      },\n      \"Historical five year prices\": {\n          \"status\": \"succeeded\"\n      },\n      \"Search\": {\n          \"status\": \"succeeded\"\n      },\n      \"Summary Analysis\": {\n          \"status\": \"succeeded\"\n      }\n  }\n}   \n</code></pre></li> </ul> </li> </ul>"},{"location":"api/health/#get-v1ping","title":"GET /v1/ping","text":""},{"location":"api/health/#overview_1","title":"Overview","text":"<p>Purpose: Simple connectivity check Response Format: Basic JSON health status with timestamp</p>"},{"location":"api/health/#authentication_1","title":"Authentication","text":"<p>None required</p>"},{"location":"api/health/#request-parameters","title":"Request Parameters","text":"<p>None</p> <p>Responses:</p> <ul> <li>200 OK<ul> <li>Content-Type: <code>application/json</code></li> <li>Example (200): <pre><code>{\n  \"status\": \"healthy\",\n  \"timestamp\": \"2023-10-01T12:34:56.789Z\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"api/health/#schema-references","title":"Schema References","text":""},{"location":"api/health/#healthstatus-schema","title":"HealthStatus Schema","text":"Field Type Description Required status string Overall health status of the API \u2713 timestamp string ISO timestamp of the health check \u2713 redis object Redis service status and metrics services object Individual service statuses and checks"},{"location":"api/health/#pingstatus-schema","title":"PingStatus Schema","text":"Field Type Description Required status string Health status of the API \u2713 timestamp string ISO timestamp of the ping request \u2713"},{"location":"api/historical/","title":"Historical Prices","text":""},{"location":"api/historical/#get-v1historical","title":"GET /v1/historical","text":""},{"location":"api/historical/#overview","title":"Overview","text":"<p>Purpose: Historical stock price data retrieval Response Format: Time-series OHLCV (Open, High, Low, Close, Volume) data</p>"},{"location":"api/historical/#authentication","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p>"},{"location":"api/historical/#request-parameters","title":"Request Parameters","text":"Parameter Type Required Description Example <code>symbol</code> string \u2713 Stock ticker symbol <code>NVDA</code> <code>range</code> string \u2713 Historical time range <code>1y</code> <code>interval</code> string \u2713 Data point frequency <code>1d</code> <code>epoch</code> boolean Use epoch timestamps (default: false) <code>true</code>"},{"location":"api/historical/#available-range-options","title":"Available Range Options","text":"<p><code>1d</code>, <code>5d</code>, <code>1mo</code>, <code>3mo</code>, <code>6mo</code>, <code>ytd</code>, <code>1y</code>, <code>2y</code>, <code>5y</code>, <code>10y</code>, <code>max</code></p>"},{"location":"api/historical/#available-interval-options","title":"Available Interval Options","text":"<p><code>1m</code>, <code>5m</code>, <code>15m</code>, <code>30m</code>, <code>1h</code>, <code>1d</code>, <code>1wk</code>, <code>1mo</code></p> <p>Interval and Range Compatibility</p> Interval Compatible Ranges <code>1m</code> <code>1d</code>, <code>5d</code> only <code>5m</code> <code>1d</code>, <code>5d</code>, <code>1mo</code> only <code>15m</code> <code>1d</code>, <code>5d</code>, <code>1mo</code> only <code>30m</code> <code>1d</code>, <code>5d</code>, <code>1mo</code> only <code>1h</code> <code>1d</code>, <code>5d</code>, <code>1mo</code>, <code>3mo</code>, <code>6mo</code>, <code>ytd</code>, <code>1y</code> only <code>1mo</code> Required for <code>max</code> range <p>Attempting incompatible combinations will result in a 400 Bad Request error.</p> <p>Responses:</p> <ul> <li>200 OK </li> <li>Content-Type: <code>application/json</code> </li> <li>Schema: Object whose keys are dates (or epoch) and values are <code>HistoricalData</code> objects.  </li> <li> <p>Example (200): <pre><code>{\n  \"2023-10-01\": {\n    \"open\": 300.0,\n    \"high\": 305.0,\n    \"low\": 295.0,\n    \"close\": 302.0,\n    \"adjClose\": 302.0,\n    \"volume\": 1500000\n  },\n  \"2023-10-02\": {\n    \"open\": 302.0,\n    \"high\": 310.0,\n    \"low\": 300.0,\n    \"close\": 308.0,\n    \"adjClose\": 308.0,\n    \"volume\": 1600000\n  }\n}\n</code></pre></p> </li> <li> <p>400 Bad Request <pre><code>{ \"detail\": \"If interval is 1m, 5m, 15m or 30m, time period must be 1mo or less\" }\n</code></pre></p> </li> <li> <p>404 Not Found <pre><code>{ \"detail\": \"Symbol not found\" }\n</code></pre></p> </li> <li> <p>422 Unprocessable Entity <pre><code>{\n  \"detail\": \"Invalid request\",\n  \"errors\": {\n    \"symbol\": [\"Field required\"],\n    \"range\": [\"Field required\"],\n    \"interval\": [\"Field required\"]\n  }\n}\n</code></pre></p> </li> </ul>"},{"location":"api/historical/#schema-references","title":"Schema References","text":""},{"location":"api/historical/#historicaldata-schema","title":"HistoricalData Schema","text":"Field Type Description Required <code>open</code> number Opening price \u2713 <code>high</code> number Highest price \u2713 <code>low</code> number Lowest price \u2713 <code>close</code> number Closing price \u2713 <code>adjClose</code> number Adjusted closing price <code>volume</code> integer Volume traded \u2713"},{"location":"api/holders/","title":"Holders","text":""},{"location":"api/holders/#get-v1holderssymbol","title":"GET /v1/holders/{symbol}","text":""},{"location":"api/holders/#overview","title":"Overview","text":"<p>Purpose: Retrieve holders information for a given stock symbol. Response Format: A holders data object containing the requested holder type information.</p>"},{"location":"api/holders/#authentication","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p>"},{"location":"api/holders/#path-parameters","title":"Path Parameters","text":"Parameter Type Required Description Example <code>symbol</code> string \u2713 The stock ticker symbol <code>AAPL</code>"},{"location":"api/holders/#query-parameters","title":"Query Parameters","text":"Parameter Type Required Description Example <code>holder_type</code> HolderType \u2713 The type of holders data to retrieve <code>institutional</code>"},{"location":"api/holders/#responses","title":"Responses","text":"<ul> <li>200 OK </li> <li>Content-Type: <code>application/json</code> </li> <li>Schema: <code>HoldersData</code></li> <li> <p>Example (200) - Institutional Holders: <pre><code>{\n  \"symbol\": \"AAPL\",\n  \"holder_type\": \"institutional\",\n  \"major_breakdown\": null,\n  \"institutional_holders\": [\n    {\n      \"holder\": \"Vanguard Group Inc\",\n      \"shares\": 1311658000,\n      \"date_reported\": \"2024-03-31T00:00:00\",\n      \"percent_out\": 8.44,\n      \"value\": 224234567000\n    },\n    {\n      \"holder\": \"BlackRock Inc.\",\n      \"shares\": 1038225000,\n      \"date_reported\": \"2024-03-31T00:00:00\",\n      \"percent_out\": 6.68,\n      \"value\": 177456789000\n    }\n  ],\n  \"mutualfund_holders\": null,\n  \"insider_transactions\": null,\n  \"insider_purchases\": null,\n  \"insider_roster\": null\n}\n</code></pre></p> </li> <li> <p>Example (200) - Major Holders Breakdown: <pre><code>{\n  \"symbol\": \"AAPL\",\n  \"holder_type\": \"major\",\n  \"major_breakdown\": {\n    \"breakdown_data\": {\n      \"institutionsPercentHeld\": 0.595,\n      \"insidersPercentHeld\": 0.0007,\n      \"institutionsFloatPercentHeld\": 0.596,\n      \"institutionsCount\": 5743\n    }\n  },\n  \"institutional_holders\": null,\n  \"mutualfund_holders\": null,\n  \"insider_transactions\": null,\n  \"insider_purchases\": null,\n  \"insider_roster\": null\n}\n</code></pre></p> </li> <li> <p>Example (200) - Insider Transactions: <pre><code>{\n  \"symbol\": \"AAPL\",\n  \"holder_type\": \"insider_transactions\",\n  \"major_breakdown\": null,\n  \"institutional_holders\": null,\n  \"mutualfund_holders\": null,\n  \"insider_transactions\": [\n    {\n      \"start_date\": \"2024-02-01T00:00:00\",\n      \"insider\": \"COOK TIMOTHY D\",\n      \"position\": \"Chief Executive Officer\",\n      \"transaction\": \"Sale at price 191.12 - 195.33 per share.\",\n      \"shares\": 511000,\n      \"value\": 98620000,\n      \"ownership\": \"D\"\n    }\n  ],\n  \"insider_purchases\": null,\n  \"insider_roster\": null\n}\n</code></pre></p> </li> <li> <p>404 Not Found <pre><code>{ \"detail\": \"No data found for SYMBOL\" }\n</code></pre></p> </li> <li> <p>422 Unprocessable Entity <pre><code>{\n  \"errors\": {\n      \"holder_type\": [\n          \"Input should be 'major', 'institutional', 'mutualfund', 'insider_transactions', 'insider_purchases' or 'insider_roster'\"\n      ]\n  }\n}\n</code></pre></p> </li> </ul>"},{"location":"api/holders/#schema-references","title":"Schema References","text":""},{"location":"api/holders/#holdersdata-schema","title":"HoldersData Schema","text":"Field Type Description Required symbol string Stock symbol (e.g., \"AAPL\") \u2713 holder_type HolderType Type of holders data \u2713 major_breakdown MajorHoldersBreakdown Major holders breakdown (when holder_type=major) institutional_holders InstitutionalHolder[] List of institutional holders mutualfund_holders MutualFundHolder[] List of mutual fund holders insider_transactions InsiderTransaction[] List of insider transactions insider_purchases InsiderPurchase Insider purchase activity summary insider_roster InsiderRosterMember[] List of insider roster members"},{"location":"api/holders/#holdertype","title":"HolderType","text":"<p>An <code>Enum</code> with the following possible string values: - <code>major</code> - Major holders breakdown - <code>institutional</code> - Institutional holders list - <code>mutualfund</code> - Mutual fund holders list - <code>insider_transactions</code> - Insider transaction history - <code>insider_purchases</code> - Insider purchase activity summary - <code>insider_roster</code> - Current insider roster</p>"},{"location":"api/holders/#majorholdersbreakdown","title":"MajorHoldersBreakdown","text":"Field Type Description Required breakdown_data object Key-value pairs of major holder metrics \u2713"},{"location":"api/holders/#institutionalholder","title":"InstitutionalHolder","text":"Field Type Description Required holder string Institution name \u2713 shares integer Number of shares held \u2713 date_reported datetime Date of last report \u2713 percent_out number Percentage of outstanding shares value integer Value of holdings"},{"location":"api/holders/#mutualfundholder","title":"MutualFundHolder","text":"Field Type Description Required holder string Fund name \u2713 shares integer Number of shares held \u2713 date_reported datetime Date of last report \u2713 percent_out number Percentage of outstanding shares value integer Value of holdings"},{"location":"api/holders/#insidertransaction","title":"InsiderTransaction","text":"Field Type Description Required start_date datetime Transaction start date \u2713 insider string Insider name \u2713 position string Insider position/relation \u2713 transaction string Transaction description \u2713 shares integer Number of shares value integer Transaction value ownership string Ownership type (direct/indirect)"},{"location":"api/holders/#insiderpurchase","title":"InsiderPurchase","text":"Field Type Description Required period string Time period for the data \u2713 purchases_shares integer Shares purchased purchases_transactions integer Number of purchase transactions sales_shares integer Shares sold sales_transactions integer Number of sale transactions net_shares integer Net shares purchased/sold net_transactions integer Net transactions total_insider_shares integer Total insider shares held net_percent_insider_shares number Net % of insider shares buy_percent_insider_shares number % buy shares sell_percent_insider_shares number % sell shares"},{"location":"api/holders/#insiderrostermember","title":"InsiderRosterMember","text":"Field Type Description Required name string Insider name \u2713 position string Position/relation \u2713 most_recent_transaction string Most recent transaction latest_transaction_date datetime Latest transaction date shares_owned_directly integer Shares owned directly shares_owned_indirectly integer Shares owned indirectly position_direct_date datetime Position direct date"},{"location":"api/holders/#usage-examples","title":"Usage Examples","text":""},{"location":"api/holders/#get-institutional-holders","title":"Get Institutional Holders","text":"<pre><code>curl -X GET \"https://finance-query.onrender.com/v1/holders/AAPL?holder_type=institutional\" \\\n     -H \"x-api-key: YOUR_API_KEY\"\n</code></pre>"},{"location":"api/holders/#get-major-holders-breakdown","title":"Get Major Holders Breakdown","text":"<pre><code>curl -X GET \"https://finance-query.onrender.com/v1/holders/MSFT?holder_type=major\" \\\n     -H \"x-api-key: YOUR_API_KEY\"\n</code></pre>"},{"location":"api/holders/#get-mutual-fund-holders","title":"Get Mutual Fund Holders","text":"<pre><code>curl -X GET \"https://finance-query.onrender.com/v1/holders/GOOGL?holder_type=mutualfund\" \\\n     -H \"x-api-key: YOUR_API_KEY\"\n</code></pre>"},{"location":"api/holders/#get-insider-transactions","title":"Get Insider Transactions","text":"<pre><code>curl -X GET \"https://finance-query.onrender.com/v1/holders/TSLA?holder_type=insider_transactions\" \\\n     -H \"x-api-key: YOUR_API_KEY\"\n</code></pre>"},{"location":"api/hours/","title":"Market Hours","text":""},{"location":"api/hours/#get-v1hours","title":"GET /v1/hours","text":""},{"location":"api/hours/#overview","title":"Overview","text":"<p>Purpose: Retrieve the current market status Response Format: JSON object with market status, reason, and timestamp</p>"},{"location":"api/hours/#authentication","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p> <p>Responses:</p> <ul> <li>200 OK<ul> <li>Content-Type: <code>application/json</code></li> <li>Example (200): <pre><code>{\n  \"status\": \"open\",\n  \"reason\": \"Regular trading hours.\",\n  \"timestamp\": \"2021-09-22T14:00:00.000Z\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"api/hours/#schema-references","title":"Schema References","text":""},{"location":"api/hours/#marketstatus-schema","title":"MarketStatus Schema","text":"Field Type Description Required status string Current market status (\"open\", \"closed\", etc.) \u2713 reason string Explanation for the current status \u2713 timestamp string ISO timestamp of the status check \u2713"},{"location":"api/indicators/","title":"Technical Indicators","text":""},{"location":"api/indicators/#get-v1indicator","title":"GET /v1/indicator","text":""},{"location":"api/indicators/#overview","title":"Overview","text":"<p>Purpose: Retrieve historical technical indicator data for a specific stock Response Format: Time series data for the requested technical indicator with historical values</p>"},{"location":"api/indicators/#authentication","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p>"},{"location":"api/indicators/#request-parameters","title":"Request Parameters","text":"Parameter Type Required Description Example <code>function</code> string \u2713 Technical indicator to fetch <code>SMA</code> <code>symbol</code> string \u2713 Stock symbol <code>NVDA</code> <code>range</code> string Time range for historical data (default: 2y) <code>1y</code> <code>interval</code> string Interval between data points (default: 1d) <code>1d</code> <code>epoch</code> boolean Return timestamps as epoch (default: false) <code>true</code> <code>lookBackPeriod</code> integer Look-back period for indicators <code>14</code> <code>stochPeriod</code> integer Stochastic look-back period <code>14</code> <code>signalPeriod</code> integer Signal period <code>9</code> <code>smooth</code> integer Smoothing period <code>3</code> <code>fastPeriod</code> integer Fast period (for MACD) <code>12</code> <code>slowPeriod</code> integer Slow period (for MACD) <code>26</code> <code>stdDev</code> integer Standard deviation (for BBANDS) <code>2</code> <code>smaPeriods</code> integer SMA look-back (for OBV) <code>20</code> <code>multiplier</code> integer Multiplier (for SUPERTREND) <code>3</code> <code>tenkanPeriod</code> integer Tenkan look-back (for ICHIMOKU) <code>9</code> <code>kijunPeriod</code> integer Kijun look-back (for ICHIMOKU) <code>26</code> <code>senkouPeriod</code> integer Senkou look-back (for ICHIMOKU) <code>52</code>"},{"location":"api/indicators/#valid-function-values","title":"Valid function values","text":"<p><code>SMA</code>, <code>EMA</code>, <code>WMA</code>, <code>VWMA</code>, <code>RSI</code>, <code>SRSI</code>, <code>STOCH</code>, <code>CCI</code>, <code>OBV</code>, <code>BBANDS</code>, <code>AROON</code>, <code>ADX</code>, <code>MACD</code>, <code>SUPERTREND</code>, <code>ICHIMOKU</code></p>"},{"location":"api/indicators/#available-range-options","title":"Available Range Options","text":"<p><code>1d</code>, <code>5d</code>, <code>1mo</code>, <code>3mo</code>, <code>6mo</code>, <code>ytd</code>, <code>1y</code>, <code>2y</code>, <code>5y</code>, <code>10y</code>, <code>max</code></p>"},{"location":"api/indicators/#available-interval-options","title":"Available Interval Options","text":"<p><code>1m</code>, <code>5m</code>, <code>15m</code>, <code>30m</code>, <code>1h</code>, <code>1d</code>, <code>1wk</code>, <code>1mo</code></p> <p>Interval and Range Compatibility</p> Interval Compatible Ranges <code>1m</code> <code>1d</code>, <code>5d</code> only <code>5m</code> <code>1d</code>, <code>5d</code>, <code>1mo</code> only <code>15m</code> <code>1d</code>, <code>5d</code>, <code>1mo</code> only <code>30m</code> <code>1d</code>, <code>5d</code>, <code>1mo</code> only <code>1h</code> <code>1d</code>, <code>5d</code>, <code>1mo</code>, <code>3mo</code>, <code>6mo</code>, <code>ytd</code>, <code>1y</code> only <code>1mo</code> Required for <code>max</code> range <p>Attempting incompatible combinations will result in a 400 Bad Request error.</p> <p>Responses:</p> <ul> <li> <p>200 OK</p> <ul> <li>Content-Type: <code>application/json</code></li> <li>Schema: <code>TechnicalIndicator</code> object</li> <li>Example (200): <pre><code>{\n  \"type\": \"SMA\",\n  \"Technical Analysis\": {\n    \"2021-07-09\": { \"value\": 30.0 },\n    \"2021-07-10\": { \"value\": 31.5 }\n  }\n}\n</code></pre></li> </ul> </li> <li> <p>400 Bad Request <pre><code>{ \"detail\": \"Invalid parameter: {parameter} for the {function} function.\" }\n</code></pre></p> </li> <li> <p>422 Unprocessable Entity <pre><code>{\n  \"detail\": \"Invalid request\",\n  \"errors\": {\n    \"function\": [\n      \"Field required\",\n      \"Input should be 'SMA', 'EMA', 'WMA', 'VWMA', 'RSI', 'SRSI', 'STOCH', 'CCI', 'OBV', 'BBANDS', 'AROON', 'ADX', 'MACD', 'SUPERTREND' or 'ICHIMOKU'\"\n    ],\n    \"symbol\": [\"Field required\"],\n    \"interval\": [\"Input should be '1m', '5m', '15m', '30m', '1h', '1d', '1wk', or '1mo'\"],\n    \"period\": [\"Input should be a valid integer, unable to parse string as an integer\"],\n    \"stoch_period\": [\"Input should be a valid integer, unable to parse string as an integer\"],\n    \"signal_period\": [\"Input should be a valid integer, unable to parse string as an integer\"],\n    \"smooth\": [\"Input should be a valid integer, unable to parse string as an integer\"],\n    \"fast_period\": [\"Input should be a valid integer, unable to parse string as an integer\"],\n    \"slow_period\": [\"Input should be a valid integer, unable to parse string as an integer\"],\n    \"std_dev\": [\"Input should be a valid integer, unable to parse string as an integer\"],\n    \"sma_periods\": [\"Input should be a valid integer, unable to parse string as an integer\"],\n    \"multiplier\": [\"Input should be a valid integer, unable to parse string as an integer\"],\n    \"tenkan_period\": [\"Input should be a valid integer, unable to parse string as an integer\"],\n    \"kijun_period\": [\"Input should be a valid integer, unable to parse string as an integer\"],\n    \"senkou_period\": [\"Input should be a valid integer, unable to parse string as an integer\"]\n  }\n}\n</code></pre></p> </li> </ul>"},{"location":"api/indicators/#get-v1indicators","title":"GET /v1/indicators","text":""},{"location":"api/indicators/#overview_1","title":"Overview","text":"<p>Purpose: Retrieve latest values for multiple technical indicators for a specific stock Response Format: Current values for requested technical indicators with their parameters</p>"},{"location":"api/indicators/#authentication_1","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p>"},{"location":"api/indicators/#request-parameters_1","title":"Request Parameters","text":"Parameter Type Required Description Example <code>symbol</code> string \u2713 Stock symbol <code>NVDA</code> <code>interval</code> string Interval for historical data (default: 1d) <code>1d</code> <code>functions</code> string Comma-separated list of indicators <code>SMA,EMA,RSI</code>"},{"location":"api/indicators/#available-interval-options_1","title":"Available Interval Options","text":"<p><code>1m</code>, <code>5m</code>, <code>15m</code>, <code>30m</code>, <code>1h</code>, <code>1d</code>, <code>1wk</code>, <code>1mo</code></p> <p>Responses:</p> <ul> <li> <p>200 OK</p> <ul> <li>Content-Type: <code>application/json</code></li> <li>Example (200): <pre><code>{\n  \"SMA(10)\": {\n    \"SMA\": 129.03\n  },\n  \"SMA(20)\": {\n    \"SMA\": 131.08\n  },\n  \"SMA(50)\": {\n    \"SMA\": 134.95\n  },\n  \"SMA(100)\": {\n    \"SMA\": 135.54\n  },\n  \"SMA(200)\": {\n    \"SMA\": 124.78\n  },\n  \"EMA(10)\": {\n    \"EMA\": 131.93\n  },\n  \"EMA(20)\": {\n    \"EMA\": 131.64\n  },\n  \"EMA(50)\": {\n    \"EMA\": 133.51\n  },\n  \"EMA(100)\": {\n    \"EMA\": 131.7\n  },\n  \"EMA(200)\": {\n    \"EMA\": 120.76\n  },\n  \"WMA(10)\": {\n    \"WMA\": 125.72\n  },\n  \"WMA(20)\": {\n    \"WMA\": 132.3\n  },\n  \"WMA(50)\": {\n    \"WMA\": 136.83\n  },\n  \"WMA(100)\": {\n    \"WMA\": 135.32\n  },\n  \"WMA(200)\": {\n    \"WMA\": 118.59\n  },\n  \"VWMA(20)\": {\n    \"VWMA\": 128.17\n  },\n  \"RSI(14)\": {\n    \"RSI\": 56.56\n  },\n  \"SRSI(3,3,14,14)\": {\n    \"%K\": 92.79,\n    \"%D\": 81.77\n  },\n  \"STOCH %K(14,3,3)\": {\n    \"%K\": 81.25,\n    \"%D\": 67.41\n  },\n  \"CCI(20)\": {\n    \"CCI\": 63.36\n  },\n  \"BBANDS(20,2)\": {\n    \"Upper Band\": 149.81,\n    \"Middle Band\": 131.08,\n    \"Lower Band\": 112.35\n  },\n  \"Aroon(25)\": {\n    \"Aroon Up\": 40,\n    \"Aroon Down\": 64\n  },\n  \"ADX(14)\": {\n    \"ADX\": 14.43\n  },\n  \"MACD(12,26)\": {\n    \"MACD\": -0.53,\n    \"Signal\": -2.1\n  },\n  \"Super Trend\": {\n    \"Super Trend\": 140.25,\n    \"Trend\": \"DOWN\"\n  },\n  \"Ichimoku Cloud\": {\n    \"Conversion Line\": 127.97,\n    \"Base Line\": 130.99,\n    \"Lagging Span\": 138.85,\n    \"Leading Span A\": 141.74,\n    \"Leading Span B\": 140\n  }\n}\n</code></pre></li> </ul> </li> <li> <p>400 Bad Request <pre><code>{ \"detail\": \"Invalid parameter: {parameter} for the {function} function.\" }\n</code></pre></p> </li> <li> <p>404 Not Found <pre><code>{ \"detail\": \"Symbol not found\" }\n</code></pre></p> </li> <li> <p>422 Unprocessable Entity <pre><code>{\n  \"detail\": \"Invalid request\",\n  \"errors\": {\n    \"symbol\": [\"Field required\"],\n    \"interval\": [\"Input should be '1m', '5m', '15m', '30m', '1h', '1d', '1wk', or '1mo'\"]\n  }\n}\n</code></pre></p> </li> </ul>"},{"location":"api/indicators/#schema-references","title":"Schema References","text":""},{"location":"api/indicators/#technicalindicator-schema","title":"TechnicalIndicator Schema","text":"Field Type Description Required type string The technical indicator (e.g., \"SMA\") \u2713 Technical Analysis object Dates mapped to indicator values \u2713"},{"location":"api/indicators/#smadata-schema","title":"SMAData Schema","text":"Field Type Description Required value float Average price over a specified period, smoothing price action"},{"location":"api/indicators/#emadata-schema","title":"EMAData Schema","text":"Field Type Description Required value float Weighted average giving more importance to recent prices"},{"location":"api/indicators/#wmadata-schema","title":"WMAData Schema","text":"Field Type Description Required value float Average where recent prices carry more weight than older prices"},{"location":"api/indicators/#vwmadata-schema","title":"VWMAData Schema","text":"Field Type Description Required value float Price average weighted by volume, showing where most trading activity occurred"},{"location":"api/indicators/#rsidata-schema","title":"RSIData Schema","text":"Field Type Description Required value float Momentum oscillator (0-100) indicating overbought/oversold conditions"},{"location":"api/indicators/#srsidata-schema","title":"SRSIData Schema","text":"Field Type Description Required k float Fast stochastic line applied to RSI values d float Smoothed signal line of the stochastic RSI"},{"location":"api/indicators/#stochdata-schema","title":"STOCHData Schema","text":"Field Type Description Required k float Fast line showing current price position within recent range d float Smoothed signal line of the stochastic oscillator"},{"location":"api/indicators/#ccidata-schema","title":"CCIData Schema","text":"Field Type Description Required value float Measures price deviation from statistical average to spot extremes"},{"location":"api/indicators/#macddata-schema","title":"MACDData Schema","text":"Field Type Description Required value float Difference between fast and slow moving averages signal float Smoothed MACD line used for buy/sell signal generation"},{"location":"api/indicators/#adxdata-schema","title":"ADXData Schema","text":"Field Type Description Required value float Strength of price trend regardless of direction (0-100)"},{"location":"api/indicators/#aroondata-schema","title":"AROONData Schema","text":"Field Type Description Required aroon_up float Time since highest high within lookback period aroon_down float Time since lowest low within lookback period"},{"location":"api/indicators/#bbandsdata-schema","title":"BBANDSData Schema","text":"Field Type Description Required upper_band float Price ceiling based on standard deviations above SMA middle_band float Simple moving average serving as the centerline lower_band float Price floor based on standard deviations below SMA"},{"location":"api/indicators/#obvdata-schema","title":"OBVData Schema","text":"Field Type Description Required value float Running total of volume based on price direction (up/down days)"},{"location":"api/indicators/#supertrenddata-schema","title":"SuperTrendData Schema","text":"Field Type Description Required value float Dynamic support/resistance level based on ATR trend string Current market direction (\"up\", \"down\", \"neutral\") \u2713"},{"location":"api/indicators/#ichimokudata-schema","title":"IchimokuData Schema","text":"Field Type Description Required tenkan_sen float Conversion line - short-term momentum and support/resistance kijun_sen float Base line - medium-term momentum and major support/resistance chikou_span float Lagging span - current price plotted 26 periods back senkou_span_a float Leading span A - future support/resistance level senkou_span_b float Leading span B - future support/resistance level"},{"location":"api/indices/","title":"Indices","text":""},{"location":"api/indices/#get-v1indices","title":"GET /v1/indices","text":""},{"location":"api/indices/#overview","title":"Overview","text":"<p>Purpose: Get major world market indices performance Response Format: Array of market indices with performance metrics and returns</p>"},{"location":"api/indices/#authentication","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p>"},{"location":"api/indices/#request-parameters","title":"Request Parameters","text":"Parameter Type Required Description Example <code>index</code> array of strings Specific indices to include (returns all if omitted) <code>[\"snp\", \"djia\", \"nasdaq\", rut\"]</code> <code>region</code> string Filter indices by region <code>US</code>"},{"location":"api/indices/#available-region-options","title":"Available Region Options","text":"<p><code>US</code>, <code>NA</code>, <code>SA</code>, <code>EU</code>, <code>AS</code>, <code>AF</code>, <code>ME</code>, <code>OCE</code>, <code>global</code></p> <p>Responses:</p> <ul> <li> <p>200 OK</p> <ul> <li>Content-Type: <code>application/json</code></li> <li>Schema: Array of <code>MarketIndex</code> objects.</li> <li>Example (200): <pre><code>[\n  {\n    \"name\": \"S&amp;P 500\",\n    \"value\": 4300.0,\n    \"change\": \"+10.00\",\n    \"percentChange\": \"+0.23%\",\n    \"fiveDaysReturn\": \"-19.35%\",\n    \"oneMonthReturn\": \"-28.48%\",\n    \"threeMonthReturn\": \"-14.02%\",\n    \"sixMonthReturn\": \"36.39%\",\n    \"ytdReturn\": \"+10.00%\",\n    \"yearReturn\": \"+20.00%\",\n    \"threeYearReturn\": \"+30.00%\",\n    \"fiveYearReturn\": \"+40.00%\",\n    \"tenYearReturn\": \"2,005.31%\",\n    \"maxReturn\": \"22,857.89%\"\n  }\n]\n</code></pre></li> </ul> </li> <li> <p>422 Unprocessable Entity <pre><code>{\n  \"detail\": \"Invalid request\",\n  \"errors\": {\n    \"index.0\": [\n      \"Input should be 'snp', 'djia', 'nasdaq', 'nyse-composite', 'nyse-amex', 'rut', 'vix', 'tsx-composite', 'ibovespa', 'ipc-mexico', 'ipsa', 'merval', 'ivbx', 'ibrx-50', 'ftse-100', 'dax', 'cac-40', 'euro-stoxx-50', 'euronext-100', 'bel-20', 'moex', 'aex', 'ibex-35', 'ftse-mib', 'smi', 'psi', 'atx', 'omxs30', 'omxc25', 'wig20', 'budapest-se', 'moex-russia', 'rtsi', 'hang-seng', 'sti', 'sensex', 'idx-composite', 'ftse-bursa', 'kospi', 'twse', 'nikkei-225', 'shanghai', 'szse-component', 'set', 'nifty-50', 'nifty-200', 'psei-composite', 'china-a50', 'dj-shanghai', 'india-vix', 'egx-30', 'jse-40', 'ftse-jse', 'afr-40', 'raf-40', 'sa-40', 'alt-15', 'ta-125', 'ta-35', 'tadawul-all-share', 'tamayuz', 'bist-100', 'asx-200', 'all-ordinaries', 'nzx-50', 'usd', 'msci-europe', 'gbp', 'euro', 'yen', 'australian', 'msci-world' or 'cboe-uk-100'\"\n    ],\n    \"region\": [\n      \"Input should be 'US', 'NA', 'SA', 'EU', 'AS', 'AF', 'ME', 'OCE' or 'global'\"\n    ]\n  }\n}\n</code></pre></p> </li> </ul>"},{"location":"api/indices/#schema-references","title":"Schema References","text":""},{"location":"api/indices/#marketindex-schema","title":"MarketIndex Schema","text":"Field Type Description Required <code>name</code> string Name of the index \u2713 <code>value</code> number Current value of the index \u2713 <code>change</code> string Change in the index \u2713 <code>percentChange</code> string Percentage change \u2713 <code>fiveDaysReturn</code> string 5-day return <code>oneMonthReturn</code> string 1-month return <code>threeMonthReturn</code> string 3-month return <code>sixMonthReturn</code> string 6-month return <code>ytdReturn</code> string Year-to-date return <code>yearReturn</code> string 1-year return <code>threeYearReturn</code> string 3-year return <code>fiveYearReturn</code> string 5-year return <code>tenYearReturn</code> string 10-year return <code>maxReturn</code> string Maximum all-time return"},{"location":"api/movers/","title":"Market Movers","text":""},{"location":"api/movers/#get-v1actives","title":"GET /v1/actives","text":""},{"location":"api/movers/#overview","title":"Overview","text":"<p>Purpose: Get list of most actively traded stocks by volume Response Format: Array of most active stocks with price movement data</p>"},{"location":"api/movers/#authentication","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p>"},{"location":"api/movers/#request-parameters","title":"Request Parameters","text":"Parameter Type Required Description Example <code>count</code> string Number of actives to retrieve (default: 50) <code>25</code>"},{"location":"api/movers/#available-count-options","title":"Available Count Options","text":"<p><code>25</code>, <code>50</code>, <code>100</code></p> <pre><code>curl -X GET \"https://finance-query.onrender.com/v1/actives?count=25\" \\\n     -H \"x-api-key: your_api_key_here\"\n</code></pre> <p>Responses:</p> <ul> <li> <p>200 OK</p> <ul> <li>Content-Type: <code>application/json</code></li> <li>Schema: Array of <code>MarketMover</code> objects.</li> <li>Example (200): <pre><code>[\n  {\n    \"symbol\": \"AAPL\",\n    \"name\": \"Apple Inc.\",\n    \"price\": \"145.86\",\n    \"change\": \"+1.00\",\n    \"percentChange\": \"+0.69%\"\n  }\n]\n</code></pre></li> </ul> </li> <li> <p>422 Unprocessable Entity <pre><code>{\n  \"detail\": \"Invalid request\",\n  \"errors\": {\n    \"count\": [\"Input should be '25', '50' or '100'\"]\n  }\n}\n</code></pre></p> </li> </ul>"},{"location":"api/movers/#get-v1gainers","title":"GET /v1/gainers","text":""},{"location":"api/movers/#overview_1","title":"Overview","text":"<p>Purpose: Get list of stocks with the highest price increase Response Format: Array of top gaining stocks with price movement data</p>"},{"location":"api/movers/#authentication_1","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p>"},{"location":"api/movers/#request-parameters_1","title":"Request Parameters","text":"Parameter Type Required Description Example <code>count</code> string Number of gainers to retrieve (default: 50) <code>25</code>"},{"location":"api/movers/#available-count-options_1","title":"Available Count Options","text":"<p><code>25</code>, <code>50</code>, <code>100</code></p> <pre><code>curl -X GET \"https://finance-query.onrender.com/v1/gainers?count=25\" \\\n     -H \"x-api-key: your_api_key_here\"\n</code></pre> <p>Responses:</p> <ul> <li> <p>200 OK</p> <ul> <li>Content-Type: <code>application/json</code></li> <li>Schema: Array of <code>MarketMover</code> objects.</li> <li>Example (200): <pre><code>[\n  {\n    \"symbol\": \"TSLA\",\n    \"name\": \"Tesla Inc.\",\n    \"price\": \"900.00\",\n    \"change\": \"+25.00\",\n    \"percentChange\": \"+2.86%\"\n  }\n]\n</code></pre></li> </ul> </li> <li> <p>422 Unprocessable Entity <pre><code>{\n  \"detail\": \"Invalid request\",\n  \"errors\": {\n    \"count\": [\"Input should be '25', '50' or '100'\"]\n  }\n}\n</code></pre></p> </li> </ul>"},{"location":"api/movers/#get-v1losers","title":"GET /v1/losers","text":""},{"location":"api/movers/#overview_2","title":"Overview","text":"<p>Purpose: Get list of stocks with the highest price decrease Response Format: Array of top losing stocks with price movement data</p>"},{"location":"api/movers/#authentication_2","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p>"},{"location":"api/movers/#request-parameters_2","title":"Request Parameters","text":"Parameter Type Required Description Example <code>count</code> string Number of losers to retrieve (default: 50) <code>25</code>"},{"location":"api/movers/#available-count-options_2","title":"Available Count Options","text":"<p><code>25</code>, <code>50</code>, <code>100</code></p> <pre><code>curl -X GET \"https://finance-query.onrender.com/v1/losers?count=25\" \\\n     -H \"x-api-key: your_api_key_here\"\n</code></pre> <p>Responses:</p> <ul> <li> <p>200 OK</p> <ul> <li>Content-Type: <code>application/json</code></li> <li>Schema: Array of <code>MarketMover</code> objects.</li> <li>Example (200): <pre><code>[\n  {\n    \"symbol\": \"AMZN\",\n    \"name\": \"Amazon.com Inc.\",\n    \"price\": \"110.00\",\n    \"change\": \"-5.00\",\n    \"percentChange\": \"-4.35%\"\n  }\n]\n</code></pre></li> </ul> </li> <li> <p>422 Unprocessable Entity <pre><code>{\n  \"detail\": \"Invalid request\",\n  \"errors\": {\n    \"count\": [\"Input should be '25', '50' or '100'\"]\n  }\n}\n</code></pre></p> </li> </ul>"},{"location":"api/movers/#schema-references","title":"Schema References","text":""},{"location":"api/movers/#marketmover-schema","title":"MarketMover Schema","text":"Field Type Description Required <code>symbol</code> string Stock symbol \u2713 <code>name</code> string Company name \u2713 <code>price</code> string Last traded price \u2713 <code>change</code> string Change in price \u2713 <code>percentChange</code> string Percentage change \u2713"},{"location":"api/news/","title":"News","text":""},{"location":"api/news/#get-v1news","title":"GET /v1/news","text":""},{"location":"api/news/#overview","title":"Overview","text":"<p>Purpose: Get financial news Response Format: Array of news articles with metadata</p>"},{"location":"api/news/#authentication","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p>"},{"location":"api/news/#request-parameters","title":"Request Parameters","text":"Parameter Type Required Description Example <code>symbol</code> string Ticker symbol (returns general news if omitted) <code>AAPL</code> <p>Responses:</p> <ul> <li> <p>200 OK</p> <ul> <li>Content-Type: <code>application/json</code></li> <li>Schema: Array of <code>News</code> objects.</li> <li>Example (200): <pre><code>[\n  {\n    \"title\": \"New iPhone Released!\",\n    \"link\": \"https://www.example.com/new-iphone\",\n    \"source\": \"TechCrunch\",\n    \"img\": \"https://www.example.com/image.jpg\",\n    \"time\": \"1 day ago\"\n  }\n]\n</code></pre></li> </ul> </li> <li> <p>404 Not Found <pre><code>{ \"detail\": \"No news found for the given symbol\" }\n</code></pre></p> </li> <li> <p>422 Unprocessable Entity <pre><code>{ \"detail\": \"Invalid request\" }\n</code></pre></p> </li> </ul>"},{"location":"api/news/#schema-references","title":"Schema References","text":""},{"location":"api/news/#news-schema","title":"News Schema","text":"Field Type Description Required title string Title of the news article \u2713 link string URL to the full article \u2713 source string News source \u2713 img string URL to accompanying image \u2713 time string Time relative to now \u2713"},{"location":"api/quotes/","title":"Quotes","text":""},{"location":"api/quotes/#get-v1quotes","title":"GET /v1/quotes","text":""},{"location":"api/quotes/#overview","title":"Overview","text":"<p>Purpose: Retrieve comprehensive quote data for multiple stocks Response Format: Detailed stock information with all available fields</p>"},{"location":"api/quotes/#authentication","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p>"},{"location":"api/quotes/#request-parameters","title":"Request Parameters","text":"Parameter Type Required Description Example <code>symbols</code> string \u2713 Comma-separated list of tickers <code>AAPL,MSFT,GOOG</code> <p>Responses:</p> <ul> <li>200 OK </li> <li>Content-Type: <code>application/json</code> </li> <li>Schema: Array of <code>Quote</code> objects  </li> <li> <p>Example (200): <pre><code>[\n  {\n    \"symbol\": \"AAPL\",\n    \"name\": \"Apple Inc.\",\n    \"price\": \"145.00\",\n    \"preMarketPrice\": \"145.50\",\n    \"afterHoursPrice\": \"145.50\",\n    \"change\": \"+1.00\",\n    \"percentChange\": \"+0.69%\",\n    \"open\": \"144.00\",\n    \"high\": \"146.00\",\n    \"low\": \"143.00\",\n    \"yearHigh\": \"150.00\",\n    \"yearLow\": \"100.00\",\n    \"volume\": 1000000,\n    \"avgVolume\": 2000000,\n    \"marketCap\": \"2.5T\",\n    \"beta\": 1.23,\n    \"pe\": \"30.00\",\n    \"eps\": \"4.50\",\n    \"dividend\": \"0.82\",\n    \"yield\": \"1.3%\",\n    \"exDividend\": \"Feb 5, 2024\",\n    \"netAssets\": \"10.5B\",\n    \"nav\": \"100.00\",\n    \"expenseRatio\": \"0.05%\",\n    \"category\": \"Large Growth\",\n    \"lastCapitalGain\": \"10.00\",\n    \"morningstarRating\": \"\u2605\u2605\",\n    \"morningstarRiskRating\": \"Low\",\n    \"holdingsTurnover\": \"5.00%\",\n    \"earningsDate\": \"Apr 23, 2024\",\n    \"lastDividend\": \"0.82\",\n    \"inceptionDate\": \"Jan 1, 2020\",\n    \"sector\": \"Technology\",\n    \"industry\": \"Consumer Electronics\",\n    \"about\": \"Apple Inc. designs, manufactures, and markets smartphones, personal computers, tablets, wearables, and accessories worldwide.\",\n    \"employees\": \"150,000\",\n    \"fiveDaysReturn\": \"-19.35%\",\n    \"oneMonthReturn\": \"-28.48%\",\n    \"threeMonthReturn\": \"-14.02%\",\n    \"sixMonthReturn\": \"36.39%\",\n    \"ytdReturn\": \"+10.00%\",\n    \"yearReturn\": \"+20.00%\",\n    \"threeYearReturn\": \"+30.00%\",\n    \"fiveYearReturn\": \"+40.00%\",\n    \"tenYearReturn\": \"2,005.31%\",\n    \"maxReturn\": \"22,857.89%\",\n    \"logo\": \"https://img.logo.dev/apple.com?token=pk_Xd1Cdye3QYmCOXzcvxhxyw&amp;retina=true\"\n  }\n]\n</code></pre></p> </li> <li> <p>404 Not Found <pre><code>{ \"detail\": \"Symbol not found\" }\n</code></pre></p> </li> <li> <p>422 Unprocessable Entity <pre><code>{\n  \"detail\": \"Invalid request\",\n  \"errors\": { \"symbols\": [\"Field required\"] }\n}\n</code></pre></p> </li> </ul>"},{"location":"api/quotes/#get-v1simple-quotes","title":"GET /v1/simple-quotes","text":""},{"location":"api/quotes/#overview_1","title":"Overview","text":"<p>Purpose: Retrieve simplified quote data for multiple stocks Response Format: Basic stock information including symbols, names, prices, and changes</p>"},{"location":"api/quotes/#authentication_1","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p>"},{"location":"api/quotes/#request-parameters_1","title":"Request Parameters","text":"Parameter Type Required Description Example <code>symbols</code> string \u2713 Comma-separated list of tickers <code>AAPL,MSFT,GOOG</code> <p>Responses:</p> <ul> <li>200 OK</li> <li>Content-Type: <code>application/json</code></li> <li>Schema: Array of <code>SimpleQuote</code> objects.</li> <li> <p>Example (200): <pre><code>[\n  {\n    \"symbol\": \"AAPL\",\n    \"name\": \"Apple Inc.\",\n    \"price\": \"145.00\",\n    \"change\": \"+1.00\",\n    \"percentChange\": \"+0.69%\",\n    \"logo\": \"https://img.logo.dev/apple.com?token=\u2026\"\n  }\n]\n</code></pre></p> </li> <li> <p>404 Not Found <pre><code>{ \"detail\": \"Symbol not found\" }\n</code></pre></p> </li> <li> <p>422 Unprocessable Entity <pre><code>{\n  \"detail\": \"Invalid request\",\n  \"errors\": { \"symbols\": [\"Field required\"] }\n}\n</code></pre></p> </li> </ul>"},{"location":"api/quotes/#get-v1similar","title":"GET /v1/similar","text":""},{"location":"api/quotes/#overview_2","title":"Overview","text":"<p>Purpose: Find stocks similar to a specific ticker Response Format: List of comparable stocks with simplified quote data</p>"},{"location":"api/quotes/#authentication_2","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p>"},{"location":"api/quotes/#request-parameters_2","title":"Request Parameters","text":"Parameter Type Required Description Example <code>symbol</code> string \u2713 Base stock for comparison <code>AAPL</code> <code>limit</code> integer Maximum results (default: 10) <code>15</code> <p>Note: Limit parameter accepts values between 1 and 20.</p> <p>Responses:</p> <ul> <li>200 OK</li> <li>Content-Type: <code>application/json</code></li> <li>Schema: Array of <code>SimpleQuote</code> objects.</li> <li> <p>Example (200): <pre><code>[\n  {\n    \"symbol\": \"AAPL\",\n    \"name\": \"Apple Inc.\",\n    \"price\": \"146.06\",\n    \"change\": \"-0.11\",\n    \"percentChange\": \"-0.11%\",\n    \"logo\": \"https://img.logo.dev/apple.com?token=\u2026\"\n  }\n]\n</code></pre></p> </li> <li> <p>404 Not Found <pre><code>{ \"detail\": \"No similar stocks found or invalid symbol\" }\n</code></pre></p> </li> <li> <p>422 Unprocessable Entity <pre><code>{\n  \"detail\": \"Invalid request\",\n  \"errors\": {\n    \"limit\": [\"Input should be greater than or equal to 1 and less than or equal to 20\"]\n  }\n}\n</code></pre></p> </li> </ul>"},{"location":"api/quotes/#schema-references","title":"Schema References","text":""},{"location":"api/quotes/#quote-schema","title":"Quote Schema","text":"Field Type Description Required symbol string Stock symbol (e.g., \"AAPL\") \u2713 name string Company name (e.g., \"Apple Inc.\") \u2713 price string Last traded price (e.g., \"145.00\") \u2713 preMarketPrice string Pre-market price (if available) afterHoursPrice string After-hours price (if available) change string Change in price (e.g., \"+1.00\") \u2713 percentChange string Percentage change (e.g., \"+0.69%\") \u2713 open string Opening price of the stock high string Highest price of the trading day low string Lowest price of the trading day yearHigh string 52-week high price yearLow string 52-week low price volume integer Volume traded avgVolume integer Average volume marketCap string Market capitalization beta string Beta of the stock pe string Price-to-earnings ratio eps string Earnings per share dividend string Dividend yield yield string Dividend yield in percentage exDividend string Ex-dividend date netAssets string Net assets (for funds) nav string Net asset value (for funds) expenseRatio string Expense ratio (for funds) category string Fund category (e.g., \"Large Growth\") lastCapitalGain string Last capital gain distribution (for funds) morningstarRating string Morningstar rating (for funds) morningstarRiskRating string Morningstar risk rating (for funds) holdingsTurnover string Holdings turnover (for funds) earningsDate string Next earnings date (if available) lastDividend string Last dividend distribution inceptionDate string Inception date (for funds) sector string Sector of the company industry string Industry of the company about string Company description employees string Number of employees fiveDaysReturn string 5-day return oneMonthReturn string 1-month return threeMonthReturn string 3-month return sixMonthReturn string 6-month return ytdReturn string Year-to-date return yearReturn string 1-year return threeYearReturn string 3-year return fiveYearReturn string 5-year return tenYearReturn string 10-year return maxReturn string All-time maximum return logo string URL to company logo"},{"location":"api/quotes/#simplequote-schema","title":"SimpleQuote Schema","text":"Field Type Description Required symbol string Stock symbol \u2713 name string Company name \u2713 price string Last traded price \u2713 preMarketPrice string Pre-market price (if any) afterHoursPrice string After-hours price (if any) change string Change in price \u2713 percentChange string Percentage change \u2713 logo string URL to company logo"},{"location":"api/search/","title":"Search","text":""},{"location":"api/search/#search-provider","title":"Search Provider","text":"<p>This endpoint uses Algolia search with my personal credentials provided for your convenience:</p> <ol> <li>Shared credentials: I've shared my personal Algolia credentials (free tier, search-only) for open use. Please use    responsibly.</li> <li>Your own credentials: You can configure your own Algolia credentials via environment variables:<ul> <li><code>ALGOLIA_APP_ID</code>: Your Algolia application ID</li> <li><code>ALGOLIA_API_KEY</code>: Your Algolia search API key</li> </ul> </li> <li>Yahoo Finance fallback: The API falls back to Yahoo Finance search automatically on errors or on configured    request parameter <code>yahoo</code>.</li> </ol> <p>Default Credentials</p> <p>The API includes shared Algolia credentials for convenience. These are search-only and cannot modify data. If you need high-volume access, please configure your own credentials.</p>"},{"location":"api/search/#get-v1search","title":"GET /v1/search","text":""},{"location":"api/search/#overview","title":"Overview","text":"<p>Purpose: Search for stocks by company name or symbol Response Format: Array of matching securities with basic information and metadata</p>"},{"location":"api/search/#authentication","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p>"},{"location":"api/search/#request-parameters","title":"Request Parameters","text":"Parameter Type Required Description Example <code>query</code> string \u2713 Partial or full company name or symbol <code>Apple</code> <code>hits</code> integer Number of results to return (default: 50) <code>25</code> <code>type</code> string Filter by security type (default: all) <code>stock</code> <code>use_algolia</code> boolean Whether to use Algolia or Yahoo (default: true) <code>false</code> <p>Parameter Constraints</p> <ul> <li><code>hits</code> parameter accepts values between 1 and 100</li> <li><code>type</code> parameter accepts: <code>stock</code>, <code>etf</code>, or <code>trust</code></li> </ul> <p>Responses:</p> <ul> <li> <p>200 OK</p> <ul> <li>Content-Type: <code>application/json</code></li> <li>Schema: Array of <code>SearchResult</code> objects</li> <li>Example (200): <pre><code>[\n  {\n    \"name\": \"Apple Inc.\",\n    \"symbol\": \"AAPL\",\n    \"exchange\": \"NASDAQ\",\n    \"type\": \"stock\"\n  }\n]\n</code></pre></li> </ul> </li> <li> <p>422 Unprocessable Entity <pre><code>{\n  \"detail\": \"Invalid request\",\n  \"errors\": {\n    \"query\": [\"Field required\"],\n    \"hits\": [\"Input should be less than or equal to 100\"],\n    \"type\": [\"Input should be 'stock', 'etf', or 'trust'\"]\n  }\n}\n</code></pre></p> </li> </ul>"},{"location":"api/search/#schema-references","title":"Schema References","text":""},{"location":"api/search/#searchresult-schema","title":"SearchResult Schema","text":"Field Type Description Required name string Full company name (e.g., \"Apple Inc.\") \u2713 symbol string Stock symbol (e.g., \"AAPL\") \u2713 exchange string Exchange where security trades (e.g., \"NASDAQ\") \u2713 type string Security type (e.g., \"stock\", \"etf\", \"trust\") \u2713"},{"location":"api/sectors/","title":"Sectors","text":""},{"location":"api/sectors/#get-v1sectors","title":"GET /v1/sectors","text":""},{"location":"api/sectors/#overview","title":"Overview","text":"<p>Purpose: Retrieve summary performance data for all market sectors Response Format: Array of sector performance summaries with returns over multiple time periods</p>"},{"location":"api/sectors/#authentication","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p> <p>Responses:</p> <ul> <li>200 OK</li> <li>Content-Type: <code>application/json</code></li> <li>Schema: Array of <code>MarketSector</code> objects</li> <li>Example (200): <pre><code>[\n  {\n    \"sector\": \"Technology\",\n    \"dayReturn\": \"-0.69%\",\n    \"ytdReturn\": \"-2.36%\",\n    \"yearReturn\": \"+24.00%\",\n    \"threeYearReturn\": \"+50.20%\",\n    \"fiveYearReturn\": \"+158.41%\"\n  },\n  {\n    \"sector\": \"Healthcare\",\n    \"dayReturn\": \"+0.87%\",\n    \"ytdReturn\": \"+7.45%\",\n    \"yearReturn\": \"+4.04%\",\n    \"threeYearReturn\": \"+7.59%\",\n    \"fiveYearReturn\": \"+44.74%\"\n  }\n]\n</code></pre></li> </ul>"},{"location":"api/sectors/#get-v1sectorssymbolsymbol","title":"GET /v1/sectors/symbol/{symbol}","text":""},{"location":"api/sectors/#overview_1","title":"Overview","text":"<p>Purpose: Retrieve sector performance summary for a specific stock symbol Response Format: Single sector performance object with returns over multiple time periods</p>"},{"location":"api/sectors/#authentication_1","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p>"},{"location":"api/sectors/#request-parameters","title":"Request Parameters","text":"Parameter Type Required Description Example <code>symbol</code> string \u2713 Stock symbol <code>AAPL</code> <p>Responses:</p> <ul> <li>200 OK</li> <li>Content-Type: <code>application/json</code></li> <li>Schema: <code>MarketSector</code> object</li> <li> <p>Example (200): <pre><code>{\n  \"sector\": \"Technology\",\n  \"dayReturn\": \"-0.46%\",\n  \"ytdReturn\": \"-2.13%\",\n  \"yearReturn\": \"+24.28%\",\n  \"threeYearReturn\": \"+50.55%\",\n  \"fiveYearReturn\": \"+159.00%\"\n}\n</code></pre></p> </li> <li> <p>404 Not Found <pre><code>{ \"detail\": \"Sector for {symbol} not found\" }\n</code></pre></p> </li> <li> <p>422 Unprocessable Entity <pre><code>{\n  \"detail\": \"Invalid request\",\n  \"errors\": { \"symbol\": [\"Field required\"] }\n}\n</code></pre></p> </li> </ul>"},{"location":"api/sectors/#get-v1sectorsdetailssector","title":"GET /v1/sectors/details/{sector}","text":""},{"location":"api/sectors/#overview_2","title":"Overview","text":"<p>Purpose: Retrieve comprehensive details for a specific market sector Response Format: Detailed sector information including performance, composition, and top holdings</p>"},{"location":"api/sectors/#authentication_2","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p>"},{"location":"api/sectors/#request-parameters_1","title":"Request Parameters","text":"Parameter Type Required Description Example <code>sector</code> string \u2713 Sector name <code>Technology</code> <p>Valid sector names: - Basic Materials - Communication Services - Consumer Cyclical - Consumer Defensive - Energy - Financial Services - Healthcare - Industrials - Real Estate - Technology - Utilities</p> <p>Responses:</p> <ul> <li>200 OK</li> <li>Content-Type: <code>application/json</code></li> <li>Schema: <code>MarketSectorDetails</code> object</li> <li> <p>Example (200): <pre><code>{\n  \"sector\": \"Technology\",\n  \"dayReturn\": \"+0.97%\",\n  \"ytdReturn\": \"+3.35%\",\n  \"yearReturn\": \"+32.59%\",\n  \"threeYearReturn\": \"+66.92%\",\n  \"fiveYearReturn\": \"+179.23%\",\n  \"marketCap\": \"20.196T\",\n  \"marketWeight\": \"29.28%\",\n  \"industries\": 12,\n  \"companies\": 815,\n  \"topIndustries\": [\n    \"Semiconductors: 29.04%\",\n    \"Software - Infrastructure: 26.44%\",\n    \"Consumer Electronics: 16.60%\",\n    \"Software - Application: 13.92%\",\n    \"Information Technology Services: 4.53%\"\n  ],\n  \"topCompanies\": [\"NVDA\",\"AAPL\",\"MSFT\",\"AVGO\",\"ORCL\",\"CRM\",\"CSCO\",\"NOW\",\"ACN\",\"IBM\"]\n}\n</code></pre></p> </li> <li> <p>422 Unprocessable Entity <pre><code>{\n  \"detail\": \"Invalid request\",\n  \"errors\": {\n    \"sector\": [\n      \"Input should be 'Basic Materials', 'Communication Services', 'Consumer Cyclical', 'Consumer Defensive', 'Energy', 'Financial Services', 'Healthcare', 'Industrials', 'Real Estate', 'Technology' or 'Utilities'\"\n    ]\n  }\n}\n</code></pre></p> </li> </ul>"},{"location":"api/sectors/#schema-references","title":"Schema References","text":""},{"location":"api/sectors/#marketsector-schema","title":"MarketSector Schema","text":"Field Type Description Required sector string Sector name (e.g., \"Technology\") \u2713 dayReturn string Day change percentage (e.g., \"-0.69%\") \u2713 ytdReturn string Year-to-date return (e.g., \"-2.36%\") \u2713 yearReturn string 1-year return (e.g., \"+24.00%\") \u2713 threeYearReturn string 3-year return (e.g., \"+50.20%\") \u2713 fiveYearReturn string 5-year return (e.g., \"+158.41%\") \u2713"},{"location":"api/sectors/#marketsectordetails-schema","title":"MarketSectorDetails Schema","text":"Field Type Description Required sector string Sector name (e.g., \"Technology\") \u2713 dayReturn string Day change percentage (e.g., \"+0.97%\") \u2713 ytdReturn string Year-to-date return (e.g., \"+3.35%\") \u2713 yearReturn string 1-year return (e.g., \"+32.59%\") \u2713 threeYearReturn string 3-year return (e.g., \"+66.92%\") \u2713 fiveYearReturn string 5-year return (e.g., \"+179.23%\") \u2713 marketCap string Total market capitalization (e.g., \"20.196T\") \u2713 marketWeight string Sector's weight in overall market (e.g., \"29.28%\") \u2713 industries integer Number of industries in the sector \u2713 companies integer Number of companies in the sector \u2713 topIndustries string[] List of top industries with percentages \u2713 topCompanies string[] List of top company symbols in the sector \u2713"},{"location":"api/stream/","title":"Server-Sent Events (SSE)","text":""},{"location":"api/stream/#get-v1streamquotes","title":"GET /v1/stream/quotes","text":""},{"location":"api/stream/#overview","title":"Overview","text":"<p>Purpose: Stream real-time stock quotes via Server-Sent Events Response Format: Text event stream with stock quote updates every 10 seconds</p>"},{"location":"api/stream/#authentication","title":"Authentication","text":"<p>Optional authentication via <code>x-api-key</code> header token</p>"},{"location":"api/stream/#request-parameters","title":"Request Parameters","text":"Parameter Type Required Description Example <code>symbols</code> string \u2713 Comma-separated list of stock symbols <code>NVDA,TSLA</code> <p>Responses:</p> <ul> <li> <p>200 OK</p> <ul> <li>Content-Type: <code>text/event-stream</code></li> <li>Example Event Stream: <pre><code>quote: [\n  {\n    \"symbol\":\"NVDA\",\n    \"name\":\"NVIDIA Corporation\",\n    \"price\":\"142.62\",\n    \"change\":\"-4.60\",\n    \"percentChange\":\"-3.12%\",\n    \"logo\":\"https://img.logo.dev/nvidia.com?token=...\"\n  }\n]\n\nquote: [\n  {\n    \"symbol\":\"NVDA\",\n    \"name\":\"NVIDIA Corporation\",\n    \"price\":\"143.00\",\n    \"change\":\"+0.38\",\n    \"percentChange\":\"+0.27%\",\n    \"logo\":\"https://img.logo.dev/nvidia.com?token=...\"\n  }\n]\n</code></pre></li> </ul> </li> <li> <p>404 Not Found <pre><code>{ \"detail\": \"Symbol not found\" }\n</code></pre></p> </li> <li> <p>422 Unprocessable Entity <pre><code>{\n  \"detail\": \"Invalid request\",\n  \"errors\": { \"symbols\": [\"Field required\"] }\n}\n</code></pre></p> </li> </ul>"},{"location":"api/stream/#schema-references","title":"Schema References","text":""},{"location":"api/stream/#simplequote-schema","title":"SimpleQuote Schema","text":"Field Type Description Required symbol string Stock symbol \u2713 name string Company name \u2713 price string Last traded price \u2713 change string Change in price \u2713 percentChange string Percentage change \u2713 logo string URL to company logo"},{"location":"development/architecture/","title":"FinanceQuery API Architecture","text":""},{"location":"development/architecture/#overview","title":"Overview","text":"<p>FinanceQuery is a FastAPI-based financial data API that aggregates data from Yahoo Finance API and web scraping. The architecture follows a service-oriented design with clear separation of concerns, emphasizing modularity, asynchronous operations, and resilience.</p>"},{"location":"development/architecture/#core-components","title":"Core Components","text":""},{"location":"development/architecture/#fastapi-application-srcmainpy","title":"FastAPI Application (<code>src/main.py</code>)","text":"<p>The main application handles:</p> <ul> <li>Lifespan Management: Initializes shared resources (HTTP sessions, Redis, authentication, proxy setup)</li> <li>Middleware Stack: CORS, request context, logging, and optional rate limiting</li> <li>Error Handling: Custom validation error formatting</li> <li>Routing: API endpoints under <code>/v1/</code> prefix with Pydantic validation</li> <li>Health Checks: <code>/ping</code> (basic) and <code>/health</code> (comprehensive service validation)</li> <li>AWS Lambda Support: Via Mangum adapter</li> </ul>"},{"location":"development/architecture/#data-models-srcmodels","title":"Data Models (<code>src/models/</code>)","text":"<p>Pydantic models provide: - API Contract Definition: Consistent request/response structures - Input Validation: Automatic parameter validation - Documentation Generation: OpenAPI schema generation - Type Safety: Runtime type checking and IDE support</p>"},{"location":"development/architecture/#routing-system-srcroutes","title":"Routing System (<code>src/routes/</code>)","text":"<p>Modular routers organize endpoints by domain: - <code>quotes</code> - Stock quotes and company information - <code>historical_prices</code> - Historical price data - <code>indices</code> - Market indices (S&amp;P 500, NASDAQ, DOW) - <code>sectors</code> - Industry sector performance - <code>movers</code> - Market gainers/losers/most active - <code>finance_news</code> - Financial news aggregation - <code>search</code> - Symbol search functionality - <code>hours</code> - Market hours status - <code>similar</code> - Similar securities lookup - <code>stream</code> - Server-sent events - <code>sockets</code> - WebSocket connections</p>"},{"location":"development/architecture/#logging-middleware-architecture","title":"Logging &amp; Middleware Architecture","text":""},{"location":"development/architecture/#logging-system-srcutilsloggingpy","title":"Logging System (<code>src/utils/logging.py</code>)","text":"<p>Comprehensive logging with configurable levels and formats:</p> <ul> <li>Environment Configuration:</li> <li><code>LOG_LEVEL</code>: DEBUG/INFO/WARNING/ERROR/CRITICAL</li> <li><code>LOG_FORMAT</code>: JSON (production) or text (development)</li> <li><code>PERFORMANCE_THRESHOLD_MS</code>: Slow operation warning threshold (default: 2000ms)</li> <li><code>DISABLE_LOGO_FETCHING</code>: Disable logo fetching entirely (default: false)</li> <li><code>LOGO_TIMEOUT_SECONDS</code>: Logo request timeout (default: 1s)</li> <li><code>LOGO_CIRCUIT_BREAKER_THRESHOLD</code>: Failures before circuit breaker opens (default: 5)</li> <li> <p><code>LOGO_CIRCUIT_BREAKER_TIMEOUT</code>: Circuit breaker timeout in seconds (default: 300)</p> </li> <li> <p>Correlation Tracking: Every request gets a unique correlation ID for distributed tracing</p> </li> <li>Structured Logging: JSON format with contextual metadata</li> <li>Performance Monitoring: Automatic slow operation detection and logging</li> <li> <p>External Library Filtering: Reduced noise from urllib3, curl_cffi, Redis</p> </li> <li> <p>Specialized Logging Functions:</p> </li> <li><code>log_api_request/response()</code> - HTTP request/response logging</li> <li><code>log_route_request/success/error()</code> - Route-specific logging</li> <li><code>log_cache_operation()</code> - Cache hit/miss tracking</li> <li><code>log_external_api_call()</code> - Third-party API monitoring</li> <li><code>log_performance()</code> - Operation timing with threshold warnings</li> <li><code>log_critical_system_failure()</code> - System-level error handling</li> </ul>"},{"location":"development/architecture/#middleware-stack","title":"Middleware Stack","text":""},{"location":"development/architecture/#loggingmiddleware-srcmiddlewarelogging_middlewarepy","title":"LoggingMiddleware (<code>src/middleware/logging_middleware.py</code>)","text":"<ul> <li>Request Correlation: Sets unique correlation ID for each request</li> <li>Comprehensive Logging: Logs all HTTP requests/responses with timing</li> <li>Route-Aware Logging: Enhanced logging for API routes vs. static content</li> <li>Performance Tracking: Automatic operation timing and slow request warnings</li> <li>Error Context: Detailed error logging with stack traces and request context</li> <li>Response Headers: Adds <code>X-Correlation-ID</code> header for client tracking</li> </ul>"},{"location":"development/architecture/#ratelimitmiddleware-srcmiddlewarerate_limit_middlewarepy","title":"RateLimitMiddleware (<code>src/middleware/rate_limit_middleware.py</code>)","text":"<ul> <li>IP-Based Limiting: Configurable daily request limits per client IP</li> <li>API Key Bypass: Admin keys bypass all rate limits</li> <li>Open Paths: Documentation and health endpoints exempt from limits</li> <li>Health Check Throttling: Special rate limiting for <code>/health</code> endpoint</li> <li>Response Headers: Rate limit status in <code>X-RateLimit-*</code> headers</li> </ul>"},{"location":"development/architecture/#service-layer-architecture","title":"Service Layer Architecture","text":""},{"location":"development/architecture/#service-organization-srcservices","title":"Service Organization (<code>src/services/</code>)","text":"<p>Services implement business logic with a consistent pattern:</p> <pre><code>src/services/\n\u251c\u2500\u2500 quotes/\n\u2502   \u251c\u2500\u2500 fetchers/\n\u2502   \u2502   \u251c\u2500\u2500 quote_api.py      # Primary Yahoo Finance API\n\u2502   \u2502   \u2514\u2500\u2500 quote_scraper.py  # Fallback web scraping\n\u2502   \u251c\u2500\u2500 get_quotes.py         # Main service with retry logic\n\u2502   \u2514\u2500\u2500 utils.py             # Helper functions\n\u251c\u2500\u2500 indicators/\n\u2502   \u2514\u2500\u2500 core/                # Cython-compiled calculations\n\u2514\u2500\u2500 ...\n</code></pre>"},{"location":"development/architecture/#multi-source-strategy","title":"Multi-Source Strategy","text":"<p>Each service implements dual-fetching for resilience:</p> <ol> <li>Primary Source (Yahoo Finance API): Fast, reliable when available</li> <li>Fallback Source (Web scraping): Resilient to API changes</li> </ol> <p>The <code>@retry</code> decorator automatically falls back from API to scraping on failure.</p>"},{"location":"development/architecture/#technical-indicators-srcservicesindicatorscore","title":"Technical Indicators (<code>src/services/indicators/core/</code>)","text":"<p>High-performance numerical computations using Cython:</p> <ul> <li>Cython Modules: <code>moving_averages.pyx</code>, <code>oscillators.pyx</code>, <code>trends.pyx</code>, <code>utils.pyx</code></li> <li>Build Requirement: <code>python setup.py build_ext --inplace</code> compiles .pyx \u2192 .so files</li> <li>Performance: Significant speed improvements for mathematical calculations</li> <li>NumPy Integration: Optimized array operations with NumPy C API</li> </ul>"},{"location":"development/architecture/#development-workflow","title":"Development Workflow","text":""},{"location":"development/architecture/#package-management","title":"Package Management","text":"<ul> <li>Primary: <code>uv</code> for fast dependency resolution and virtual environment management</li> <li>Commands: <code>uv sync --all-groups</code> for development setup</li> <li>Fallback: Traditional pip with requirements.txt files</li> </ul>"},{"location":"development/architecture/#build-process","title":"Build Process","text":"<p>Essential for technical indicators: <pre><code>make build                              # Recommended\npython setup.py build_ext --inplace   # Manual\n</code></pre></p>"},{"location":"development/architecture/#development-commands","title":"Development Commands","text":"<pre><code>make help        # Show all commands\nmake install-dev # Install dependencies + pre-commit hooks\nmake serve       # Start development server\nmake test        # Run tests with coverage\nmake lint        # Run pre-commit hooks (ruff check/format)\nmake docs        # Serve documentation\nmake clean       # Clean build artifacts\n</code></pre>"},{"location":"development/architecture/#data-persistence-caching","title":"Data Persistence &amp; Caching","text":""},{"location":"development/architecture/#caching-strategy-srcutilscachepy","title":"Caching Strategy (<code>src/utils/cache.py</code>)","text":"<p>Flexible caching with market-aware expiration:</p> <ul> <li>Cache Handlers:</li> <li><code>RedisCacheHandler</code>: Distributed caching (when Redis available)</li> <li> <p><code>MemCacheHandler</code>: Local in-memory fallback</p> </li> <li> <p>Smart Expiration:</p> </li> <li>Standard TTL during market hours</li> <li>Extended TTL when markets closed</li> <li> <p>Market schedule awareness via <code>MarketSchedule</code></p> </li> <li> <p>Cache Key Generation: SHA-256 hash of function name + arguments</p> </li> <li>Type Preservation: Maintains Pydantic model types after retrieval</li> </ul>"},{"location":"development/architecture/#retry-mechanism-srcutilsretrypy","title":"Retry Mechanism (<code>src/utils/retry.py</code>)","text":"<p>Sophisticated retry with fallback capability:</p> <ul> <li>Configurable Retries: Attempts primary function with exponential backoff</li> <li>Intelligent Fallback: Analyzes function signatures for parameter compatibility</li> <li>Error Propagation: Preserves HTTP exceptions while retrying network errors</li> </ul>"},{"location":"development/architecture/#authentication-http-clients","title":"Authentication &amp; HTTP Clients","text":""},{"location":"development/architecture/#yahoo-authentication-srcutilsyahoo_authpy","title":"Yahoo Authentication (<code>src/utils/yahoo_auth.py</code>)","text":"<p>Manages Yahoo Finance API access:</p> <ul> <li>Cookie/Crumb Management: Handles CSRF tokens and session cookies</li> <li>Automatic Refresh: Maintains valid authentication credentials</li> <li>Consent Flow Handling: Navigates Yahoo's consent requirements</li> <li>Thread Safety: Async lock prevents concurrent refresh attempts</li> </ul>"},{"location":"development/architecture/#http-client-architecture","title":"HTTP Client Architecture","text":""},{"location":"development/architecture/#fetchclient-srcclientsfetch_clientpy","title":"FetchClient (<code>src/clients/fetch_client.py</code>)","text":"<p>General-purpose async HTTP client: - curl_cffi Integration: Browser impersonation for web scraping - Proxy Support: Configurable proxy routing - Async/Await: Non-blocking operations via <code>asyncio.to_thread</code></p>"},{"location":"development/architecture/#yahoofinanceclient-srcclientsyahoo_clientpy","title":"YahooFinanceClient (<code>src/clients/yahoo_client.py</code>)","text":"<p>Specialized Yahoo Finance API client: - Auto-Authentication: Injects cookies/crumb automatically - Error Handling: Yahoo-specific HTTP status code handling - API Methods: <code>get_quote()</code>, <code>get_chart()</code>, <code>search()</code>, etc.</p>"},{"location":"development/architecture/#real-time-data-architecture","title":"Real-Time Data Architecture","text":""},{"location":"development/architecture/#websocket-connection-management","title":"WebSocket Connection Management","text":""},{"location":"development/architecture/#connectionmanager-srcconnectionsconnection_managerpy","title":"ConnectionManager (<code>src/connections/connection_manager.py</code>)","text":"<p>In-memory WebSocket management: - Channel-Based: Groups connections by symbol/topic - Task Management: Per-channel data fetching tasks - Auto-Cleanup: Removes inactive connections and cancels unused tasks</p>"},{"location":"development/architecture/#redisconnectionmanager-srcconnectionsredis_connection_managerpy","title":"RedisConnectionManager (<code>src/connections/redis_connection_manager.py</code>)","text":"<p>Distributed WebSocket support: - Redis Pub/Sub: Multi-instance message broadcasting - Load Distribution: Data fetching tasks distributed across instances - Scalability: Supports horizontal scaling of WebSocket connections</p>"},{"location":"development/architecture/#security-rate-limiting","title":"Security &amp; Rate Limiting","text":""},{"location":"development/architecture/#security-configuration-srcsecurityrate_limit_managerpy","title":"Security Configuration (<code>src/security/rate_limit_manager.py</code>)","text":"<ul> <li>Admin API Keys: <code>ADMIN_API_KEY</code> bypasses all rate limits</li> <li>Daily Limits: Configurable requests per IP per day</li> <li>Open Paths: <code>/docs</code>, <code>/ping</code>, <code>/health</code> exempt from limits</li> <li>Health Check Throttling: Separate rate limiting for health checks</li> <li>Security Toggle: <code>USE_SECURITY</code> environment variable enables/disables rate limiting</li> </ul>"},{"location":"development/architecture/#implementation","title":"Implementation","text":"<ul> <li>In-Memory Storage: Rate limit counters with automatic cleanup</li> <li>IP-Based Tracking: Client identification via request IP</li> <li>Header Communication: Rate limit status via response headers</li> </ul>"},{"location":"development/architecture/#dependency-injection-srcutilsdependenciespy","title":"Dependency Injection (<code>src/utils/dependencies.py</code>)","text":"<p>FastAPI-injectable dependencies provide:</p> <ul> <li>Shared Resources: Session objects, Redis clients, authentication</li> <li>Client Abstractions: Pre-configured HTTP clients</li> <li>Utility Functions: Reusable async operations</li> <li>Context Management: Request-specific state and correlation</li> </ul>"},{"location":"development/architecture/#deployment-architecture","title":"Deployment Architecture","text":"<ul> <li>AWS Lambda: Mangum adapter for serverless deployment</li> <li>Docker: Multi-stage builds with optimized images  </li> <li>Environment Configuration: 12-factor app principles with comprehensive environment variables</li> <li>Health Monitoring: Comprehensive health checks for all services</li> <li>Logging Integration: Structured logs for observability platforms</li> </ul>"},{"location":"development/architecture/#key-environment-variables","title":"Key Environment Variables","text":"Variable Purpose Default Required Docker Config <code>REDIS_URL</code> Redis connection for caching/WebSockets None No Runtime <code>USE_SECURITY</code> Enable rate limiting and API authentication False No Runtime <code>ADMIN_API_KEY</code> Admin key bypassing rate limits None No Runtime <code>USE_PROXY</code> Enable proxy for web scraping False No Runtime <code>PROXY_URL</code> Proxy server URL None No Runtime <code>PROXY_TOKEN</code> Proxy authentication token None No Runtime <code>LOG_LEVEL</code> Logging level INFO No Build + Runtime <code>LOG_FORMAT</code> Log format (json/text) json No Build + Runtime <code>BYPASS_CACHE</code> Disable caching False No Runtime <code>ALGOLIA_APP_ID</code> Algolia search app ID Public default No Runtime <code>ALGOLIA_API_KEY</code> Algolia search API key Public default No Runtime <code>DISABLE_LOGO_FETCHING</code> Disable logo fetching false No Build + Runtime <code>LOGO_TIMEOUT_SECONDS</code> Logo request timeout 1 No Build + Runtime <code>LOGO_CIRCUIT_BREAKER_THRESHOLD</code> Circuit breaker failure threshold 5 No Build + Runtime <code>LOGO_CIRCUIT_BREAKER_TIMEOUT</code> Circuit breaker timeout (seconds) 300 No Build + Runtime <code>PERFORMANCE_THRESHOLD_MS</code> Slow operation warning threshold 2000 No Build + Runtime"},{"location":"development/architecture/#docker-configuration","title":"Docker Configuration","text":"<p>Both <code>Dockerfile</code> and <code>Dockerfile.aws</code> support all environment variables:</p> <ul> <li>Build-time: Logo fetching and logging configs can be baked into image</li> <li>Runtime: All variables can be overridden when running containers</li> <li>Compose Ready: All variables work with docker-compose configurations</li> </ul>"},{"location":"development/contributing/","title":"Contributor Guide","text":"<p>Thank you for your interest in improving FinanceQuery. This project is open-source under the MIT license and welcomes contributions in the form of bug reports, feature requests, and pull requests.</p> <p>Here is a list of important resources for contributors:</p> <ul> <li>Source Code</li> <li>Demo</li> <li>Documentation</li> <li>Issue Tracker</li> <li>Code of Conduct</li> </ul>"},{"location":"development/contributing/#how-to-report-a-bug","title":"How to report a bug","text":"<p>Report bugs on the Issue Tracker.</p> <p>When filing an issue, make sure to answer these questions:</p> <ul> <li>Which operating system and Python version are you using?</li> <li>Which version of this project are you using?</li> <li>What did you do?</li> <li>What did you expect to see?</li> <li>What did you see instead?</li> </ul> <p>The best way to get your bug fixed is to provide a test case, and/or steps to reproduce the issue.</p>"},{"location":"development/contributing/#how-to-request-a-feature","title":"How to request a feature","text":"<p>Request features on the Issue Tracker.</p>"},{"location":"development/contributing/#how-to-set-up-your-development-environment","title":"How to set up your development environment","text":"<p>You need Python 3.11 or newer. We recommend using a virtual environment.</p>"},{"location":"development/contributing/#quick-setup-with-makefile-recommended","title":"Quick Setup with Makefile (Recommended)","text":"<p>For the fastest setup, use the provided Makefile:</p> <pre><code>$ make install-dev\n</code></pre> <p>This will: - Install all dependencies using <code>uv</code> - Build required Cython extensions for technical indicators - Set up pre-commit hooks automatically</p> <p>Then you can use these commands for development:</p> <pre><code>$ make help        # Show all available commands\n$ make build       # Build Cython extensions (required for technical indicators)\n$ make serve       # Start development server at http://localhost:8000\n$ make test        # Run tests with coverage\n$ make lint        # Run linting and formatting (pre-commit hooks)\n$ make docs        # Serve documentation at http://localhost:8001\n$ make clean       # Clean build artifacts\n</code></pre>"},{"location":"development/contributing/#manual-setup","title":"Manual Setup","text":"<p>If you prefer manual setup, you'll need uv for dependency management:</p> <pre><code>$ pip install uv\n$ uv sync --all-groups\n$ python setup.py build_ext --inplace  # Required for technical indicators\n$ pre-commit install\n</code></pre>"},{"location":"development/contributing/#legacy-setup-with-pip","title":"Legacy Setup with pip","text":"<p>For environments without <code>uv</code>, you can still use pip:</p> <pre><code>$ python -m venv venv\n$ source venv/bin/activate  # On Windows: venv\\Scripts\\activate\n$ pip install -r requirements.txt\n$ pip install -r requirements/dev.txt\n$ python setup.py build_ext --inplace  # Required for technical indicators\n</code></pre>"},{"location":"development/contributing/#setting-up-environment-variables","title":"Setting up environment variables","text":"<p>Create a <code>.env</code> file in the project root with the following variables: See the <code>.env.template</code> file for an example.</p> <pre><code># Basic configuration\nREDIS_URL=redis://localhost:6379  # Optional, for caching and WebSocket support\nUSE_SECURITY=True  # Enable rate limiting and API key authentication\nADMIN_API_KEY=your-admin-key-here  # Admin key that bypasses rate limits\nBYPASS_CACHE=False  # Set to True to disable caching during development\n\n# Proxy configuration (optional, recommended for production)\nUSE_PROXY=False\nPROXY_URL=\nPROXY_TOKEN=  # For whitelisting IPs in proxy service\n\n# Algolia search (optional, uses default public credentials)\nALGOLIA_APP_ID=ZTZOECLXBC\nALGOLIA_API_KEY=a3882d6ec31c0b1063ede94374616d8a\n\n# Logging configuration\nLOG_LEVEL=DEBUG  # DEBUG, INFO, WARNING, ERROR, CRITICAL\nLOG_FORMAT=text  # json or text\nPERFORMANCE_THRESHOLD_MS=2000  # Slow operation warning threshold\n\n# Logo fetching configuration\nDISABLE_LOGO_FETCHING=false  # Set to true to disable logo fetching\nLOGO_TIMEOUT_SECONDS=1  # Timeout for logo requests\nLOGO_CIRCUIT_BREAKER_THRESHOLD=5  # Failures before circuit breaker opens\nLOGO_CIRCUIT_BREAKER_TIMEOUT=300  # Circuit breaker timeout in seconds\n</code></pre>"},{"location":"development/contributing/#how-to-test-the-project","title":"How to test the project","text":"<p>Run the full test suite:</p> <pre><code>$ pytest\n</code></pre> <p>You can also run specific test files:</p> <pre><code>$ pytest tests/test_quotes.py\n</code></pre> <p>Unit tests are located in the tests directory, and are written using the pytest testing framework.</p>"},{"location":"development/contributing/#local-development","title":"Local development","text":""},{"location":"development/contributing/#using-makefile-recommended","title":"Using Makefile (Recommended)","text":"<pre><code>$ make serve\n</code></pre>"},{"location":"development/contributing/#manual-development-server","title":"Manual Development Server","text":"<p>To run the application locally:</p> <pre><code>$ python -m uvicorn src.main:app --reload\n</code></pre> <p>This will start the API server at <code>http://localhost:8000</code> with automatic reloading enabled.</p>"},{"location":"development/contributing/#docker-development","title":"Docker Development","text":"<p>You can also use Docker:</p> <pre><code>$ make docker\n# Or manually:\n$ docker build -t finance-query .\n$ docker run -p 8000:8000 finance-query\n</code></pre>"},{"location":"development/contributing/#docker-with-environment-variables","title":"Docker with Environment Variables","text":"<p>Build-time configuration (baked into image): <pre><code>$ docker build \\\n  --build-arg LOG_LEVEL=DEBUG \\\n  --build-arg LOG_FORMAT=text \\\n  --build-arg DISABLE_LOGO_FETCHING=true \\\n  --build-arg LOGO_TIMEOUT_SECONDS=2 \\\n  -t finance-query .\n</code></pre></p> <p>Runtime configuration (can be changed when running): <pre><code>$ docker run -p 8000:8000 \\\n  -e LOG_LEVEL=DEBUG \\\n  -e LOG_FORMAT=text \\\n  -e REDIS_URL=redis://host.docker.internal:6379 \\\n  -e USE_SECURITY=true \\\n  -e ADMIN_API_KEY=your-admin-key \\\n  -e USE_PROXY=true \\\n  -e PROXY_URL=http://proxy:8080 \\\n  -e PROXY_TOKEN=your-proxy-token \\\n  finance-query\n</code></pre></p> <p>Docker Compose example: <pre><code>version: '3.8'\nservices:\n  api:\n    build: .\n    ports:\n      - \"8000:8000\"\n    environment:\n      - LOG_LEVEL=INFO\n      - LOG_FORMAT=json\n      - REDIS_URL=redis://redis:6379\n      - USE_SECURITY=true\n      - ADMIN_API_KEY=your-admin-key\n      - DISABLE_LOGO_FETCHING=false\n      - LOGO_TIMEOUT_SECONDS=1\n  redis:\n    image: redis:alpine\n    ports:\n      - \"6379:6379\"\n</code></pre></p>"},{"location":"development/contributing/#how-to-submit-changes","title":"How to submit changes","text":"<p>Open a pull request to submit changes to this project.</p> <p>Your pull request needs to meet the following guidelines for acceptance:</p> <ul> <li>The test suite must pass without errors and warnings.</li> <li>Include unit tests for new functionality.</li> <li>If your changes add functionality, update the documentation accordingly.</li> <li>Follow the existing code style (Ruff formatting and linting).</li> </ul> <p>Feel free to submit early, though\u2014we can always iterate on this.</p>"},{"location":"development/contributing/#code-quality-checks","title":"Code Quality Checks","text":""},{"location":"development/contributing/#using-makefile-recommended_1","title":"Using Makefile (Recommended)","text":"<pre><code>$ make lint\n</code></pre> <p>This runs all pre-commit hooks including: - Ruff linting with auto-fixes - Ruff formatting - TOML/YAML validation - Trailing whitespace removal</p>"},{"location":"development/contributing/#manual-code-quality","title":"Manual Code Quality","text":"<p>To run linting and code formatting checks before committing your change:</p> <pre><code>$ pre-commit run --all-files\n</code></pre> <p>It is recommended to open an issue before starting work on anything. This will allow a chance to talk it over with the owners and validate your approach.</p>"},{"location":"development/contributing/#branch-workflow","title":"Branch Workflow","text":"<p>FinanceQuery follows a structured branch workflow:</p> <ol> <li> <p>Feature branches: Create a branch for your feature or bugfix. Branch names should be descriptive and follow this format: <code>feat/your-feature-name</code> or <code>fix/issue-description</code>.</p> </li> <li> <p>Staging branch: All feature branches must be merged into the <code>staging</code> branch first for integration testing.</p> </li> <li> <p>Master branch: The <code>master</code> branch contains production-ready code. Pull requests to <code>master</code> are only accepted from the <code>staging</code> branch and are automatically restricted by our CI workflow.</p> </li> </ol> <p>This workflow ensures that code in the master branch has been properly reviewed and tested in staging before deployment to production.</p> <pre><code>feature/your-feature --&gt; staging --&gt; master\n</code></pre> <p>Please do not attempt to merge feature branches directly to master as these pull requests will be automatically rejected.</p>"},{"location":"development/contributing/#project-architecture","title":"Project architecture","text":"<p>Please review the architecture document to understand the project's structure before contributing.</p>"},{"location":"websockets/hours/","title":"Hours WebSocket","text":"<p>The Hours WebSocket endpoint provides real-time market status information, indicating whether markets are currently open, closed, in pre-market, or after-hours trading sessions.</p>"},{"location":"websockets/hours/#use-case","title":"Use Case","text":"<p>Use this endpoint when you need to track market hours and status for:</p> <ul> <li>Trading application status indicators</li> <li>Conditional data fetching based on market state</li> <li>User notifications about market status</li> <li>Trading hour restrictions</li> <li>Market countdown timers</li> </ul>"},{"location":"websockets/hours/#connection","title":"Connection","text":""},{"location":"websockets/hours/#url-format","title":"URL Format","text":"<ul> <li>Production: <code>wss://your-domain.com/hours</code></li> <li>Local: <code>ws://localhost:8000/hours</code></li> </ul>"},{"location":"websockets/hours/#parameters","title":"Parameters","text":"<p>No parameters required - provides general market status.</p>"},{"location":"websockets/hours/#usage-examples","title":"Usage Examples","text":""},{"location":"websockets/hours/#javascript","title":"JavaScript","text":"<pre><code>const socket = new WebSocket('wss://finance-query.onrender.com/hours');\n\nsocket.onopen = function(event) {\n    console.log('Connected to market hours stream');\n};\n\nsocket.onmessage = function(event) {\n    const statusData = JSON.parse(event.data);\n    console.log('Market status:', statusData);\n};\n\nsocket.onclose = function(event) {\n    console.log('Market hours stream closed');\n};\n</code></pre>"},{"location":"websockets/hours/#responses","title":"Responses","text":""},{"location":"websockets/hours/#response-format","title":"Response Format","text":"<p>The WebSocket sends JSON responses with market status information:</p> <pre><code>{\n    \"status\": \"OPEN\",\n    \"reason\": \"Regular trading hours\",\n    \"timestamp\": \"2024-01-15T14:30:00.000Z\"\n}\n</code></pre>"},{"location":"websockets/hours/#response-schema","title":"Response Schema","text":"Field Type Description Required status string Market status indicator \u2713 reason string Description of current market state \u2713 timestamp string ISO 8601 timestamp of status update \u2713"},{"location":"websockets/hours/#error-handling","title":"Error Handling","text":"<ul> <li>Connection errors return standard WebSocket error events</li> </ul>"},{"location":"websockets/hours/#channel-naming","title":"Channel Naming","text":"<ul> <li>Channel: Always uses the channel name <code>hours</code></li> </ul>"},{"location":"websockets/market/","title":"Market WebSocket","text":"<p>The Market WebSocket endpoint provides a comprehensive real-time overview of the financial markets, including market movers, major indices, general market news, and sector performance data.</p>"},{"location":"websockets/market/#use-case","title":"Use Case","text":"<p>Use this endpoint when you need a complete market overview for dashboards or market analysis applications. Perfect for:</p> <ul> <li>Market overview dashboards</li> <li>Trading platform home pages  </li> <li>Financial news applications</li> <li>Market analysis tools</li> <li>Portfolio context information</li> </ul>"},{"location":"websockets/market/#connection","title":"Connection","text":""},{"location":"websockets/market/#url-format","title":"URL Format","text":"<ul> <li>Production: <code>wss://your-domain.com/market</code></li> <li>Local: <code>ws://localhost:8000/market</code></li> </ul>"},{"location":"websockets/market/#usage-examples","title":"Usage Examples","text":""},{"location":"websockets/market/#javascript","title":"JavaScript","text":"<pre><code>const socket = new WebSocket('wss://finance-query.onrender.com/market');\n\nsocket.onopen = function(event) {\n    console.log('Connected to market overview stream');\n};\n\nsocket.onmessage = function(event) {\n    const marketData = JSON.parse(event.data);\n    console.log('Market data update:', marketData);\n};\n\nsocket.onclose = function(event) {\n    console.log('Market stream closed');\n};\n</code></pre>"},{"location":"websockets/market/#responses","title":"Responses","text":""},{"location":"websockets/market/#response-format","title":"Response Format","text":"<p>The WebSocket sends comprehensive market data in the following JSON structure:</p> <pre><code>{\n    \"actives\": [\n        {\n            \"symbol\": \"AAPL\",\n            \"name\": \"Apple Inc.\",\n            \"price\": 150.25,\n            \"change\": 2.15,\n            \"percentChange\": 1.45,\n            \"volume\": 45678912\n        },\n        {\n            \"symbol\": \"TSLA\",\n            \"name\": \"Tesla Inc.\",\n            \"price\": 850.30,\n            \"change\": -15.75,\n            \"percentChange\": -1.82,\n            \"volume\": 32145678\n        }\n    ],\n    \"gainers\": [\n        {\n            \"symbol\": \"NVDA\",\n            \"name\": \"NVIDIA Corporation\",\n            \"price\": 420.50,\n            \"change\": 25.30,\n            \"percentChange\": 6.40,\n            \"volume\": 15234567\n        }\n    ],\n    \"losers\": [\n        {\n            \"symbol\": \"NFLX\",\n            \"name\": \"Netflix Inc.\",\n            \"price\": 380.25,\n            \"change\": -18.75,\n            \"percentChange\": -4.70,\n            \"volume\": 8765432\n        }\n    ],\n    \"indices\": [\n        {\n            \"symbol\": \"^GSPC\",\n            \"name\": \"S&amp;P 500\",\n            \"price\": 4250.15,\n            \"change\": 12.50,\n            \"percentChange\": 0.29\n        },\n        {\n            \"symbol\": \"^DJI\", \n            \"name\": \"Dow Jones\",\n            \"price\": 34150.25,\n            \"change\": -45.30,\n            \"percentChange\": -0.13\n        },\n        {\n            \"symbol\": \"^IXIC\",\n            \"name\": \"NASDAQ\",\n            \"price\": 13500.75,\n            \"change\": 85.20,\n            \"percentChange\": 0.63\n        }\n    ],\n    \"headlines\": [\n        {\n            \"title\": \"Federal Reserve Maintains Interest Rates\",\n            \"url\": \"https://example.com/news/fed-rates\",\n            \"publishedAt\": \"2024-01-15T14:30:00Z\",\n            \"source\": \"Financial Times\",\n            \"summary\": \"The Federal Reserve decided to keep rates unchanged...\"\n        },\n        {\n            \"title\": \"Tech Stocks Rally on AI Optimism\",\n            \"url\": \"https://example.com/news/tech-rally\",\n            \"publishedAt\": \"2024-01-15T13:15:00Z\",\n            \"source\": \"MarketWatch\",\n            \"summary\": \"Technology stocks surged following positive AI developments...\"\n        }\n    ],\n    \"sectors\": [\n        {\n            \"sector\": \"Technology\",\n            \"performance\": 1.25,\n            \"change\": 0.35,\n            \"description\": \"Technology sector showing strong performance\"\n        },\n        {\n            \"sector\": \"Healthcare\",\n            \"performance\": -0.45,\n            \"change\": -0.12,\n            \"description\": \"Healthcare sector declining amid regulatory concerns\"\n        },\n        {\n            \"sector\": \"Energy\",\n            \"performance\": 2.15,\n            \"change\": 0.89,\n            \"description\": \"Energy sector boosted by oil price increases\"\n        }\n    ]\n}\n</code></pre>"},{"location":"websockets/market/#response-schema","title":"Response Schema","text":""},{"location":"websockets/market/#top-level-structure","title":"Top-Level Structure","text":"Field Type Description Required actives array Most actively traded stocks by volume \u2713 gainers array Top performing stocks by percentage \u2713 losers array Worst performing stocks by percentage \u2713 indices array Major market indices \u2713 headlines array General financial and economic news \u2713 sectors array Performance of major market sectors \u2713"},{"location":"websockets/market/#market-mover-item-schema","title":"Market Mover Item Schema","text":"Field Type Description Required symbol string Stock ticker symbol \u2713 name string Company name \u2713 price number Current stock price \u2713 change number Absolute price change \u2713 percentChange number Percentage price change \u2713 volume number Trading volume \u2713"},{"location":"websockets/market/#index-item-schema","title":"Index Item Schema","text":"Field Type Description Required symbol string Index symbol \u2713 name string Index name \u2713 price number Current index value \u2713 change number Absolute value change \u2713 percentChange number Percentage value change \u2713"},{"location":"websockets/market/#headline-item-schema","title":"Headline Item Schema","text":"Field Type Description Required title string News article title \u2713 url string Link to full article \u2713 publishedAt string Publication timestamp (ISO) \u2713 source string News source name \u2713 summary string Brief article summary \u2713"},{"location":"websockets/market/#sector-item-schema","title":"Sector Item Schema","text":"Field Type Description Required sector string Sector name \u2713 performance number Overall sector performance \u2713 change number Day-to-day change \u2713 description string Brief sector status summary \u2713"},{"location":"websockets/market/#error-handling","title":"Error Handling","text":"<ul> <li>Individual data sources may fail independently</li> <li>Failed sources return empty arrays</li> <li>Successful sources continue to provide data</li> </ul>"},{"location":"websockets/market/#channel-naming","title":"Channel Naming","text":"<ul> <li>Channel: Always uses the channel name <code>hours</code></li> </ul>"},{"location":"websockets/profile/","title":"Profile WebSocket","text":"<p>The Profile WebSocket endpoint provides comprehensive real-time data for a single stock symbol, including detailed quotes, similar stocks, sector performance, and relevant news.</p>"},{"location":"websockets/profile/#use-case","title":"Use Case","text":"<p>Use this endpoint when you need extensive information for a single stock and want real-time updates. Perfect for:</p> <ul> <li>Stock detail pages</li> <li>Individual stock monitoring</li> <li>Comprehensive stock analysis dashboards</li> </ul>"},{"location":"websockets/profile/#connection","title":"Connection","text":""},{"location":"websockets/profile/#url-format","title":"URL Format","text":"<ul> <li>Production: <code>wss://your-domain.com/profile/AAPL</code></li> <li>Local: <code>ws://localhost:8000/profile/AAPL</code></li> </ul>"},{"location":"websockets/profile/#parameters","title":"Parameters","text":"<ul> <li><code>symbol</code> (path parameter) - Stock symbol to monitor (e.g., \"AAPL\", \"GOOGL\", \"TSLA\")</li> </ul>"},{"location":"websockets/profile/#usage-examples","title":"Usage Examples","text":""},{"location":"websockets/profile/#javascript","title":"JavaScript","text":"<pre><code>const socket = new WebSocket('wss://finance-query.onrender.com/profile/AAPL');\n\nsocket.onopen = function (event) {\n    console.log('Connected to profile stream for AAPL');\n};\n\nsocket.onmessage = function (event) {\n    const data = JSON.parse(event.data);\n    console.log('Profile data:', data);\n};\n\nsocket.onclose = function (event) {\n    console.log('Profile stream closed');\n};\n</code></pre>"},{"location":"websockets/profile/#responses","title":"Responses","text":""},{"location":"websockets/profile/#response-format","title":"Response Format","text":"<p>The WebSocket sends JSON responses with the following structure:</p> <pre><code>{\n  \"quote\": {\n    \"symbol\": \"AAPL\",\n    \"name\": \"Apple Inc.\",\n    \"price\": 150.25,\n    \"change\": 2.15,\n    \"percentChange\": 1.45,\n    \"volume\": 45678912,\n    \"marketCap\": 2500000000000,\n    \"pe\": 28.5,\n    \"eps\": 5.26,\n    \"high\": 152.00,\n    \"low\": 148.50,\n    \"open\": 149.00,\n    \"previousClose\": 148.10,\n    \"fiftyTwoWeekHigh\": 180.00,\n    \"fiftyTwoWeekLow\": 120.00\n  },\n  \"similar\": [\n    {\n      \"symbol\": \"MSFT\",\n      \"name\": \"Microsoft Corporation\",\n      \"price\": 340.50,\n      \"change\": -1.25,\n      \"percentChange\": -0.37\n    },\n    {\n      \"symbol\": \"GOOGL\",\n      \"name\": \"Alphabet Inc.\",\n      \"price\": 2650.00,\n      \"change\": 15.30,\n      \"percentChange\": 0.58\n    }\n  ],\n  \"sectorPerformance\": {\n    \"sector\": \"Technology\",\n    \"performance\": 1.25,\n    \"description\": \"Technology sector performance\"\n  },\n  \"news\": [\n    {\n      \"title\": \"Apple Reports Strong Q4 Earnings\",\n      \"url\": \"https://example.com/news/1\",\n      \"publishedAt\": \"2024-01-15T10:30:00Z\",\n      \"source\": \"Financial News\",\n      \"summary\": \"Apple exceeded expectations...\"\n    },\n    {\n      \"title\": \"iPhone Sales Drive Revenue Growth\",\n      \"url\": \"https://example.com/news/2\",\n      \"publishedAt\": \"2024-01-15T09:15:00Z\",\n      \"source\": \"Tech Today\",\n      \"summary\": \"Strong iPhone demand...\"\n    }\n  ]\n}\n</code></pre>"},{"location":"websockets/profile/#response-schema","title":"Response Schema","text":""},{"location":"websockets/profile/#top-level-structure","title":"Top-Level Structure","text":"Field Type Description Required quote object Comprehensive quote data for the symbol \u2713 similar array List of similar stocks with basic quotes \u2713 sectorPerformance object Performance data for the stock's sector \u2713 news array Recent news articles related to the stock \u2713"},{"location":"websockets/profile/#quote-schema","title":"Quote Schema","text":"Field Type Description Required symbol string Stock symbol (e.g., \"AAPL\") \u2713 name string Company name (e.g., \"Apple Inc.\") \u2713 price string Last traded price (e.g., \"145.00\") \u2713 preMarketPrice string Pre-market price (if available) afterHoursPrice string After-hours price (if available) change string Change in price (e.g., \"+1.00\") \u2713 percentChange string Percentage change (e.g., \"+0.69%\") \u2713 open string Opening price of the stock high string Highest price of the trading day low string Lowest price of the trading day yearHigh string 52-week high price yearLow string 52-week low price volume integer Volume traded avgVolume integer Average volume marketCap string Market capitalization beta string Beta of the stock pe string Price-to-earnings ratio eps string Earnings per share dividend string Dividend yield yield string Dividend yield in percentage exDividend string Ex-dividend date netAssets string Net assets (for funds) nav string Net asset value (for funds) expenseRatio string Expense ratio (for funds) category string Fund category (e.g., \"Large Growth\") lastCapitalGain string Last capital gain distribution (for funds) morningstarRating string Morningstar rating (for funds) morningstarRiskRating string Morningstar risk rating (for funds) holdingsTurnover string Holdings turnover (for funds) earningsDate string Next earnings date (if available) lastDividend string Last dividend distribution inceptionDate string Inception date (for funds) sector string Sector of the company industry string Industry of the company about string Company description employees string Number of employees fiveDaysReturn string 5-day return oneMonthReturn string 1-month return threeMonthReturn string 3-month return sixMonthReturn string 6-month return ytdReturn string Year-to-date return yearReturn string 1-year return threeYearReturn string 3-year return fiveYearReturn string 5-year return tenYearReturn string 10-year return maxReturn string All-time maximum return logo string URL to company logo"},{"location":"websockets/profile/#similar-quotes-schema","title":"Similar Quotes Schema","text":"Field Type Description Required symbol string Stock symbol \u2713 name string Company name \u2713 price string Last traded price \u2713 preMarketPrice string Pre-market price (if any) afterHoursPrice string After-hours price (if any) change string Change in price \u2713 percentChange string Percentage change \u2713 logo string URL to company logo"},{"location":"websockets/profile/#sector-performance-schema","title":"Sector Performance Schema","text":"Field Type Description Required sector string Sector name \u2713 dayReturn string 1-day sector return percentage \u2713 ytdReturn string Year-to-date sector return \u2713 yearReturn string 1-year sector return \u2713 threeYearReturn string 3-year sector return \u2713 fiveYearReturn string 5-year sector return \u2713"},{"location":"websockets/profile/#news-item-schema","title":"News Item Schema","text":"Field Type Description Required title string Title of the news article \u2713 link string URL to the full article \u2713 source string News source \u2713 img string URL to accompanying image \u2713 time string Time relative to now \u2713"},{"location":"websockets/profile/#error-handling","title":"Error Handling","text":"<ul> <li>Invalid symbols will still establish connection but may return null quote data</li> <li>Network disconnections trigger automatic cleanup</li> <li>Authentication failures prevent connection establishment</li> </ul>"},{"location":"websockets/profile/#channel-naming","title":"Channel Naming","text":"<ul> <li>Channel: Uses <code>profile:{symbol}</code> format</li> <li>Example: For symbol \"AAPL\", the channel name is <code>profile:AAPL</code></li> </ul>"},{"location":"websockets/quotes/","title":"Quotes WebSocket","text":"<p>The Quotes WebSocket endpoint provides real-time simple quote data for multiple stock symbols simultaneously. This endpoint is optimized for high-performance scenarios where you need basic quote information for many stocks.</p>"},{"location":"websockets/quotes/#use-case","title":"Use Case","text":"<p>Use this endpoint when you need basic quote information for multiple stocks with minimal bandwidth usage. Perfect for:</p> <ul> <li>Stock watchlists</li> <li>Portfolio monitoring</li> <li>Market overview displays</li> <li>Trading dashboards</li> </ul>"},{"location":"websockets/quotes/#connection","title":"Connection","text":""},{"location":"websockets/quotes/#url-format","title":"URL Format","text":"<ul> <li>Production: <code>wss://your-domain.com/quotes</code></li> <li>Local: <code>ws://localhost:8000/quotes</code></li> </ul> <p>Two-Step Connection Required</p> <p>Unlike other WebSocket endpoints, the quotes endpoint requires a two-step connection process:</p> <ol> <li>Establish Connection - Connect to the WebSocket endpoint</li> <li>Send Symbols - Send a comma-separated list of stock symbols</li> </ol>"},{"location":"websockets/quotes/#usage-examples","title":"Usage Examples","text":""},{"location":"websockets/quotes/#javascript","title":"JavaScript","text":"<pre><code>const socket = new WebSocket('wss://finance-query.onrender.com/quotes');\n\nsocket.onopen = function (event) {\n    console.log('Connected to quotes stream');\n\n    // Send the symbols you want to monitor\n    socket.send('AAPL,GOOGL,MSFT,TSLA,AMZN');\n};\n\nsocket.onmessage = function (event) {\n    const quotes = JSON.parse(event.data);\n    console.log('Quotes update:', quotes);\n};\n\nsocket.onclose = function (event) {\n    console.log('Quotes stream closed');\n};\n</code></pre>"},{"location":"websockets/quotes/#symbol-format","title":"Symbol Format","text":""},{"location":"websockets/quotes/#sending-symbols","title":"Sending Symbols","text":"<ul> <li>Format: Comma-separated string</li> <li>Case: Symbols are automatically converted to uppercase</li> <li>Duplicates Symbols are automatically deduplicated</li> </ul>"},{"location":"websockets/quotes/#responses","title":"Responses","text":""},{"location":"websockets/quotes/#response-format","title":"Response Format","text":"<p>The WebSocket sends JSON arrays with simplified quote objects:</p> <pre><code>[\n  {\n    \"symbol\": \"AAPL\",\n    \"name\": \"Apple Inc.\",\n    \"price\": \"150.25\",\n    \"change\": 2.15,\n    \"percentChange\": 1.45,\n    \"preMarketPrice\": \"151.00\",\n    \"afterHoursPrice\": \"149.80\",\n    \"logo\": \"https://example.com/logos/aapl.png\"\n  },\n  {\n    \"symbol\": \"GOOGL\",\n    \"name\": \"Alphabet Inc.\",\n    \"price\": \"2650.00\",\n    \"change\": -15.30,\n    \"percentChange\": -0.57,\n    \"logo\": \"https://example.com/logos/googl.png\"\n  },\n  {\n    \"symbol\": \"MSFT\",\n    \"name\": \"Microsoft Corporation\",\n    \"price\": \"340.50\",\n    \"change\": 5.25,\n    \"percentChange\": 1.56,\n    \"preMarketPrice\": \"341.00\"\n  }\n]\n</code></pre>"},{"location":"websockets/quotes/#response-schema","title":"Response Schema","text":"Field Type Description Required symbol string Stock ticker symbol \u2713 name string Company name \u2713 price string Current stock price \u2713 change number Absolute price change \u2713 percentChange number Percentage change \u2713 preMarketPrice string Pre-market trading price afterHoursPrice string After-hours trading price logo string Company logo URL"},{"location":"websockets/quotes/#error-handling","title":"Error Handling","text":"<ul> <li>Invalid symbols are silently ignored</li> <li>Valid symbols in the list are still processed</li> <li>No error messages for invalid symbols</li> </ul>"},{"location":"websockets/quotes/#channel-naming","title":"Channel Naming","text":"<ul> <li>Channel: Uses the exact symbol list as channel name</li> <li>Example: <code>\"AAPL,GOOGL,MSFT\"</code> becomes channel <code>AAPL,GOOGL,MSFT</code></li> </ul>"}]}