name: Run tests, linting and upload coverage

on:
  pull_request:

permissions:
  contents: read
  actions: read
  checks: write  # Required for uploading test results

jobs:
  pre-commit:
    name: Run pre-commit hooks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Cache pre-commit hooks
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Run pre-commit hooks
        run: pre-commit run --all-files

  test:
    name: Run tests and collect coverage
    runs-on: ubuntu-latest
    needs: pre-commit
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Create virtual environment
        run: uv venv

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('uv.lock', 'pyproject.toml') }}
          restore-keys: |
            venv-${{ runner.os }}-

      - name: Install dependencies
        run: uv sync --all-groups

      - name: Build Cython extensions
        run: uv run python setup.py build_ext --inplace

      - name: Run tests
        env:
          # Test environment variables
          BYPASS_CACHE: true
          LOG_LEVEL: DEBUG
          LOG_FORMAT: text
          DISABLE_LOGO_FETCHING: true
          PERFORMANCE_THRESHOLD_MS: 5000
        run: uv run pytest

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          name: finance-query
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
